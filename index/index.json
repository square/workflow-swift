{"includedArchiveIdentifiers":["ViewEnvironment","ViewEnvironmentUI","Workflow","WorkflowSwiftUI","WorkflowTesting","WorkflowUI"],"schemaVersion":{"major":0,"minor":1,"patch":2},"interfaceLanguages":{"swift":[{"children":[{"title":"ViewEnvironment","type":"module","children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Associated Types"},{"path":"\/documentation\/viewenvironment\/viewenvironmentkey\/value","type":"associatedtype","title":"Value"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/viewenvironment\/viewenvironmentkey\/defaultvalue","type":"property","title":"static var defaultValue: Value"}],"title":"ViewEnvironmentKey","path":"\/documentation\/viewenvironment\/viewenvironmentkey","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/viewenvironment\/viewenvironment\/setting(key:to:)","type":"method","title":"func setting<Key>(key: Key.Type, to: Key.Value) -> ViewEnvironment"},{"path":"\/documentation\/viewenvironment\/viewenvironment\/setting(keypath:to:)","type":"method","title":"func setting<Value>(keyPath: WritableKeyPath<ViewEnvironment, Value>, to: Value) -> ViewEnvironment"},{"type":"groupMarker","title":"Subscripts"},{"path":"\/documentation\/viewenvironment\/viewenvironment\/subscript(_:)","type":"subscript","title":"subscript<Key>(Key.Type) -> Key.Value"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/viewenvironment\/viewenvironment\/empty","type":"property","title":"static let empty: ViewEnvironment"}],"title":"ViewEnvironment","path":"\/documentation\/viewenvironment\/viewenvironment","type":"struct"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"title":"Environment","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/viewenvironment\/swiftuicore\/environment\/init(_:)","title":"init(KeyPath<EnvironmentValues, Value>)","type":"init"}],"path":"\/documentation\/viewenvironment\/swiftuicore\/environment","type":"extension"},{"title":"EnvironmentValues","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var viewEnvironment: ViewEnvironment","path":"\/documentation\/viewenvironment\/swiftuicore\/environmentvalues\/viewenvironment","type":"property"}],"path":"\/documentation\/viewenvironment\/swiftuicore\/environmentvalues","type":"extension"}],"title":"SwiftUICore","path":"\/documentation\/viewenvironment\/swiftuicore","type":"extension"}],"path":"\/documentation\/viewenvironment"},{"title":"ViewEnvironmentUI","type":"module","children":[{"title":"Classes","type":"groupMarker"},{"title":"ViewEnvironmentCustomizationLifetime","path":"\/documentation\/viewenvironmentui\/viewenvironmentcustomizationlifetime","type":"class","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/viewenvironmentui\/viewenvironmentcustomizationlifetime\/remove()","type":"method","title":"func remove()"}]},{"title":"ViewEnvironmentUpdateObservationLifetime","path":"\/documentation\/viewenvironmentui\/viewenvironmentupdateobservationlifetime","type":"class","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func remove()","path":"\/documentation\/viewenvironmentui\/viewenvironmentupdateobservationlifetime\/remove()"}]},{"title":"Protocols","type":"groupMarker"},{"title":"ViewEnvironmentObserving","path":"\/documentation\/viewenvironmentui\/viewenvironmentobserving","type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/viewenvironmentui\/viewenvironmentobserving\/apply(environment:)","type":"method","children":[{"title":"ViewEnvironmentObserving Implementations","type":"groupMarker","children":[{"title":"func apply(environment: ViewEnvironment)","type":"method","path":"\/documentation\/viewenvironmentui\/viewenvironmentobserving\/apply(environment:)-1kxzy"}]}],"title":"func apply(environment: ViewEnvironment)"},{"path":"\/documentation\/viewenvironmentui\/viewenvironmentobserving\/applyenvironmentifneeded()","type":"method","title":"func applyEnvironmentIfNeeded()"},{"path":"\/documentation\/viewenvironmentui\/viewenvironmentobserving\/customize(environment:)","type":"method","children":[{"children":[{"path":"\/documentation\/viewenvironmentui\/viewenvironmentobserving\/customize(environment:)-3dllr","title":"func customize(environment: inout ViewEnvironment)","type":"method"}],"type":"groupMarker","title":"ViewEnvironmentObserving Implementations"}],"title":"func customize(environment: inout ViewEnvironment)"},{"path":"\/documentation\/viewenvironmentui\/viewenvironmentobserving\/environmentdidchange()","type":"method","children":[{"title":"ViewEnvironmentObserving Implementations","type":"groupMarker","children":[{"type":"method","title":"func environmentDidChange()","path":"\/documentation\/viewenvironmentui\/viewenvironmentobserving\/environmentdidchange()-18stf"}]}],"title":"func environmentDidChange()"}]},{"title":"ViewEnvironmentPropagating","path":"\/documentation\/viewenvironmentui\/viewenvironmentpropagating","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/viewenvironmentui\/viewenvironmentpropagating\/environment","title":"var environment: ViewEnvironment"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/viewenvironmentui\/viewenvironmentpropagating\/applyenvironmentifneeded()","title":"func applyEnvironmentIfNeeded()"},{"children":[{"title":"ViewEnvironmentPropagating Implementations","children":[{"title":"func setNeedsEnvironmentUpdate()","type":"method","path":"\/documentation\/viewenvironmentui\/viewenvironmentpropagating\/setneedsenvironmentupdate()-1oxbn"}],"type":"groupMarker"}],"type":"method","path":"\/documentation\/viewenvironmentui\/viewenvironmentpropagating\/setneedsenvironmentupdate()","title":"func setNeedsEnvironmentUpdate()"}]},{"title":"Type Aliases","type":"groupMarker"},{"title":"ViewEnvironmentCustomization","path":"\/documentation\/viewenvironmentui\/viewenvironmentcustomization","type":"typealias"},{"title":"ViewEnvironmentUpdateObservation","path":"\/documentation\/viewenvironmentui\/viewenvironmentupdateobservation","type":"typealias"},{"title":"Extended Modules","type":"groupMarker"},{"title":"UIKit","path":"\/documentation\/viewenvironmentui\/uikit","type":"extension","children":[{"title":"Extended Classes","type":"groupMarker"},{"path":"\/documentation\/viewenvironmentui\/uikit\/uiview","children":[{"title":"Default Implementations","type":"groupMarker"},{"title":"ViewEnvironmentPropagating Implementations","path":"\/documentation\/viewenvironmentui\/uikit\/uiview\/viewenvironmentpropagating-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/viewenvironmentui\/uikit\/uiview\/environment","title":"var environment: ViewEnvironment","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/viewenvironmentui\/uikit\/uiview\/applyenvironmentifneeded()","title":"func applyEnvironmentIfNeeded()","type":"method"},{"path":"\/documentation\/viewenvironmentui\/uikit\/uiview\/setneedsenvironmentupdate()","title":"func setNeedsEnvironmentUpdate()","type":"method"}],"type":"symbol"}],"title":"UIView","type":"extension"},{"path":"\/documentation\/viewenvironmentui\/uikit\/uiviewcontroller","children":[{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/viewenvironmentui\/uikit\/uiviewcontroller\/viewenvironmentpropagating-implementations","title":"ViewEnvironmentPropagating Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/viewenvironmentui\/uikit\/uiviewcontroller\/environment","title":"var environment: ViewEnvironment"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/viewenvironmentui\/uikit\/uiviewcontroller\/applyenvironmentifneeded()","title":"func applyEnvironmentIfNeeded()"},{"type":"method","path":"\/documentation\/viewenvironmentui\/uikit\/uiviewcontroller\/setneedsenvironmentupdate()","title":"func setNeedsEnvironmentUpdate()"}]}],"title":"UIViewController","type":"extension"}]}],"path":"\/documentation\/viewenvironmentui"},{"title":"Workflow","type":"module","children":[{"title":"Classes","type":"groupMarker"},{"path":"\/documentation\/workflow\/lifetime","title":"Lifetime","type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/workflow\/lifetime\/hasended","type":"property","title":"var hasEnded: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/workflow\/lifetime\/onended(_:)","type":"method","title":"func onEnded(() -> Void)"}]},{"path":"\/documentation\/workflow\/rendercontext","title":"RenderContext","type":"class","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func makeOutputSink() -> Sink<WorkflowType.Output>","path":"\/documentation\/workflow\/rendercontext\/makeoutputsink()","type":"method"},{"title":"func makeSink<Action>(of: Action.Type) -> Sink<Action>","path":"\/documentation\/workflow\/rendercontext\/makesink(of:)","type":"method"},{"title":"func makeSink<Event>(of: Event.Type, onEvent: (Event, inout WorkflowType.State) -> WorkflowType.Output?) -> Sink<Event>","path":"\/documentation\/workflow\/rendercontext\/makesink(of:onevent:)","type":"method"},{"title":"func makeStateMutationSink() -> StateMutationSink<WorkflowType>","path":"\/documentation\/workflow\/rendercontext\/makestatemutationsink()","type":"method"},{"title":"func runSideEffect(key: AnyHashable, action: (Lifetime) -> Void)","path":"\/documentation\/workflow\/rendercontext\/runsideeffect(key:action:)","type":"method"}]},{"path":"\/documentation\/workflow\/workflowhost","title":"WorkflowHost","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(workflow: WorkflowType, observers: [WorkflowObserver], debugger: WorkflowDebugger?)","path":"\/documentation\/workflow\/workflowhost\/init(workflow:observers:debugger:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var output: Signal<WorkflowType.Output, Never>","path":"\/documentation\/workflow\/workflowhost\/output"},{"type":"property","title":"let rendering: Property<WorkflowType.Rendering>","path":"\/documentation\/workflow\/workflowhost\/rendering"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func update(workflow: WorkflowType)","path":"\/documentation\/workflow\/workflowhost\/update(workflow:)"}]},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/workflow\/anyworkflowconvertible","title":"AnyWorkflowConvertible","type":"protocol","children":[{"type":"groupMarker","title":"Associated Types"},{"path":"\/documentation\/workflow\/anyworkflowconvertible\/output","type":"associatedtype","title":"Output"},{"path":"\/documentation\/workflow\/anyworkflowconvertible\/rendering","type":"associatedtype","title":"Rendering"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/workflow\/anyworkflowconvertible\/asanyworkflow()","type":"method","title":"func asAnyWorkflow() -> AnyWorkflow<Rendering, Output>","children":[{"title":"AnyWorkflowConvertible Implementations","type":"groupMarker","children":[{"title":"func asAnyWorkflow() -> AnyWorkflow<Rendering, Output>","path":"\/documentation\/workflow\/anyworkflowconvertible\/asanyworkflow()-2w147","type":"method"}]}]},{"path":"\/documentation\/workflow\/anyworkflowconvertible\/ignoringoutput()","type":"method","title":"func ignoringOutput() -> AnyWorkflow<Rendering, Never>"},{"path":"\/documentation\/workflow\/anyworkflowconvertible\/mapoutput(_:)","type":"method","title":"func mapOutput<NewOutput>((Output) -> NewOutput) -> AnyWorkflow<Rendering, NewOutput>"},{"path":"\/documentation\/workflow\/anyworkflowconvertible\/mapoutput(to:)","type":"method","title":"func mapOutput<NewOutput>(to: NewOutput.Type) -> AnyWorkflow<Rendering, NewOutput>"},{"path":"\/documentation\/workflow\/anyworkflowconvertible\/maprendering(_:)","type":"method","title":"func mapRendering<NewRendering>((Rendering) -> NewRendering) -> AnyWorkflow<NewRendering, Output>"},{"path":"\/documentation\/workflow\/anyworkflowconvertible\/onoutput(_:)","type":"method","title":"func onOutput<Parent>((inout Parent.State, Output) -> Parent.Output?) -> AnyWorkflow<Rendering, AnyWorkflowAction<Parent>>"},{"path":"\/documentation\/workflow\/anyworkflowconvertible\/rendered(in:key:)-2ndnc","type":"method","title":"func rendered<T>(in: RenderContext<T>, key: String) -> Rendering"},{"path":"\/documentation\/workflow\/anyworkflowconvertible\/rendered(in:key:)-6q45j","type":"method","title":"func rendered<Parent>(in: RenderContext<Parent>, key: String) -> Rendering"},{"path":"\/documentation\/workflow\/anyworkflowconvertible\/rendered(in:key:)-8uzi0","type":"method","title":"func rendered<Parent>(in: RenderContext<Parent>, key: String) -> Rendering"},{"path":"\/documentation\/workflow\/anyworkflowconvertible\/rendered(in:key:outputmap:)","type":"method","title":"func rendered<Parent, Action>(in: RenderContext<Parent>, key: String, outputMap: (Output) -> Action) -> Rendering"},{"path":"\/documentation\/workflow\/anyworkflowconvertible\/running(in:key:)","type":"method","title":"func running<Parent>(in: RenderContext<Parent>, key: String)"},{"path":"\/documentation\/workflow\/anyworkflowconvertible\/running(in:key:outputmap:)","type":"method","title":"func running<Parent, Action>(in: RenderContext<Parent>, key: String, outputMap: (Output) -> Action)"}]},{"path":"\/documentation\/workflow\/workflow","title":"Workflow","type":"protocol","children":[{"type":"groupMarker","title":"Associated Types"},{"type":"associatedtype","path":"\/documentation\/workflow\/workflow\/output","title":"Output"},{"type":"associatedtype","path":"\/documentation\/workflow\/workflow\/rendering","title":"Rendering"},{"type":"associatedtype","path":"\/documentation\/workflow\/workflow\/state","title":"State"},{"type":"groupMarker","title":"Instance Methods"},{"children":[{"title":"Workflow Implementations","children":[{"type":"method","path":"\/documentation\/workflow\/workflow\/makeinitialstate()-4droa","title":"func makeInitialState() -> State"}],"type":"groupMarker"}],"type":"method","path":"\/documentation\/workflow\/workflow\/makeinitialstate()","title":"func makeInitialState() -> State"},{"type":"method","path":"\/documentation\/workflow\/workflow\/render(state:context:)","title":"func render(state: State, context: RenderContext<Self>) -> Rendering"},{"children":[{"title":"Workflow Implementations","type":"groupMarker","children":[{"title":"func workflowDidChange(from: Self, state: inout State)","path":"\/documentation\/workflow\/workflow\/workflowdidchange(from:state:)-3bj3h","type":"method"}]}],"type":"method","path":"\/documentation\/workflow\/workflow\/workflowdidchange(from:state:)","title":"func workflowDidChange(from: Self, state: inout State)"}]},{"path":"\/documentation\/workflow\/workflowaction","title":"WorkflowAction","type":"protocol","children":[{"type":"groupMarker","title":"Associated Types"},{"path":"\/documentation\/workflow\/workflowaction\/workflowtype","type":"associatedtype","title":"WorkflowType"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/workflow\/workflowaction\/apply(tostate:context:)","type":"method","title":"func apply(toState: inout WorkflowType.State, context: ApplyContext<WorkflowType>) -> WorkflowType.Output?"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/workflow\/workflowaction\/actionapplyclosure","type":"typealias","title":"WorkflowAction.ActionApplyClosure"}]},{"path":"\/documentation\/workflow\/workflowdebugger","title":"WorkflowDebugger","type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/workflow\/workflowdebugger\/didenterinitialstate(snapshot:)","title":"func didEnterInitialState(snapshot: WorkflowHierarchyDebugSnapshot)","type":"method"},{"path":"\/documentation\/workflow\/workflowdebugger\/didupdate(snapshot:updateinfo:)","title":"func didUpdate(snapshot: WorkflowHierarchyDebugSnapshot, updateInfo: WorkflowUpdateDebugInfo)","type":"method"}]},{"path":"\/documentation\/workflow\/workflowobserver","title":"WorkflowObserver","type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"children":[{"children":[{"path":"\/documentation\/workflow\/workflowobserver\/sessiondidbegin(_:)-8xqk1","title":"func sessionDidBegin(WorkflowSession)","type":"method"}],"title":"WorkflowObserver Implementations","type":"groupMarker"}],"path":"\/documentation\/workflow\/workflowobserver\/sessiondidbegin(_:)","type":"method","title":"func sessionDidBegin(WorkflowSession)"},{"children":[{"title":"WorkflowObserver Implementations","type":"groupMarker","children":[{"path":"\/documentation\/workflow\/workflowobserver\/sessiondidend(_:)-33jyn","type":"method","title":"func sessionDidEnd(WorkflowSession)"}]}],"path":"\/documentation\/workflow\/workflowobserver\/sessiondidend(_:)","type":"method","title":"func sessionDidEnd(WorkflowSession)"},{"children":[{"type":"groupMarker","title":"WorkflowObserver Implementations","children":[{"path":"\/documentation\/workflow\/workflowobserver\/workflowdidchange(from:to:state:session:)-6f3nj","type":"method","title":"func workflowDidChange<WorkflowType>(from: WorkflowType, to: WorkflowType, state: WorkflowType.State, session: WorkflowSession)"}]}],"path":"\/documentation\/workflow\/workflowobserver\/workflowdidchange(from:to:state:session:)","type":"method","title":"func workflowDidChange<WorkflowType>(from: WorkflowType, to: WorkflowType, state: WorkflowType.State, session: WorkflowSession)"},{"children":[{"children":[{"path":"\/documentation\/workflow\/workflowobserver\/workflowdidmakeinitialstate(_:initialstate:session:)-8dbwl","type":"method","title":"func workflowDidMakeInitialState<WorkflowType>(WorkflowType, initialState: WorkflowType.State, session: WorkflowSession)"}],"type":"groupMarker","title":"WorkflowObserver Implementations"}],"path":"\/documentation\/workflow\/workflowobserver\/workflowdidmakeinitialstate(_:initialstate:session:)","type":"method","title":"func workflowDidMakeInitialState<WorkflowType>(WorkflowType, initialState: WorkflowType.State, session: WorkflowSession)"},{"children":[{"children":[{"title":"func workflowDidReceiveAction<Action>(Action, workflow: Action.WorkflowType, session: WorkflowSession)","type":"method","path":"\/documentation\/workflow\/workflowobserver\/workflowdidreceiveaction(_:workflow:session:)-2kpkk"}],"title":"WorkflowObserver Implementations","type":"groupMarker"}],"path":"\/documentation\/workflow\/workflowobserver\/workflowdidreceiveaction(_:workflow:session:)","type":"method","title":"func workflowDidReceiveAction<Action>(Action, workflow: Action.WorkflowType, session: WorkflowSession)"},{"children":[{"title":"WorkflowObserver Implementations","type":"groupMarker","children":[{"path":"\/documentation\/workflow\/workflowobserver\/workflowwillapplyaction(_:workflow:state:session:)-721lb","type":"method","title":"func workflowWillApplyAction<Action>(Action, workflow: Action.WorkflowType, state: Action.WorkflowType.State, session: WorkflowSession) -> ((Action.WorkflowType.State, Action.WorkflowType.Output?) -> Void)?"}]}],"path":"\/documentation\/workflow\/workflowobserver\/workflowwillapplyaction(_:workflow:state:session:)","type":"method","title":"func workflowWillApplyAction<Action>(Action, workflow: Action.WorkflowType, state: Action.WorkflowType.State, session: WorkflowSession) -> ((Action.WorkflowType.State, Action.WorkflowType.Output?) -> Void)?"},{"children":[{"type":"groupMarker","title":"WorkflowObserver Implementations","children":[{"path":"\/documentation\/workflow\/workflowobserver\/workflowwillrender(_:state:session:)-56cnf","type":"method","title":"func workflowWillRender<WorkflowType>(WorkflowType, state: WorkflowType.State, session: WorkflowSession) -> ((WorkflowType.Rendering) -> Void)?"}]}],"path":"\/documentation\/workflow\/workflowobserver\/workflowwillrender(_:state:session:)","type":"method","title":"func workflowWillRender<WorkflowType>(WorkflowType, state: WorkflowType.State, session: WorkflowSession) -> ((WorkflowType.Rendering) -> Void)?"}]},{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/workflow\/anyworkflow","title":"AnyWorkflow","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init<T>(T)","type":"init","path":"\/documentation\/workflow\/anyworkflow\/init(_:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var base: Any","type":"property","path":"\/documentation\/workflow\/anyworkflow\/base"},{"title":"var workflowType: Any.Type","type":"property","path":"\/documentation\/workflow\/anyworkflow\/workflowtype"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func mapOutput<NewOutput>((Output) -> NewOutput) -> AnyWorkflow<Rendering, NewOutput>","type":"method","path":"\/documentation\/workflow\/anyworkflow\/mapoutput(_:)"},{"title":"func mapRendering<NewRendering>((Rendering) -> NewRendering) -> AnyWorkflow<NewRendering, Output>","type":"method","path":"\/documentation\/workflow\/anyworkflow\/maprendering(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/workflow\/anyworkflow\/asanyworkflow()","title":"func asAnyWorkflow() -> AnyWorkflow<Rendering, Output>"},{"type":"method","path":"\/documentation\/workflow\/anyworkflow\/ignoringoutput()","title":"func ignoringOutput() -> AnyWorkflow<Rendering, Never>"},{"type":"method","path":"\/documentation\/workflow\/anyworkflow\/mapoutput(_:)-67iko","title":"func mapOutput<NewOutput>((Output) -> NewOutput) -> AnyWorkflow<Rendering, NewOutput>"},{"type":"method","path":"\/documentation\/workflow\/anyworkflow\/mapoutput(to:)","title":"func mapOutput<NewOutput>(to: NewOutput.Type) -> AnyWorkflow<Rendering, NewOutput>"},{"type":"method","path":"\/documentation\/workflow\/anyworkflow\/maprendering(_:)-4awce","title":"func mapRendering<NewRendering>((Rendering) -> NewRendering) -> AnyWorkflow<NewRendering, Output>"},{"type":"method","path":"\/documentation\/workflow\/anyworkflow\/onoutput(_:)","title":"func onOutput<Parent>((inout Parent.State, Output) -> Parent.Output?) -> AnyWorkflow<Rendering, AnyWorkflowAction<Parent>>"},{"type":"method","path":"\/documentation\/workflow\/anyworkflow\/rendered(in:key:)-1tei9","title":"func rendered<Parent>(in: RenderContext<Parent>, key: String) -> Rendering"},{"type":"method","path":"\/documentation\/workflow\/anyworkflow\/rendered(in:key:)-4o5qb","title":"func rendered<T>(in: RenderContext<T>, key: String) -> Rendering"},{"type":"method","path":"\/documentation\/workflow\/anyworkflow\/rendered(in:key:)-781hu","title":"func rendered<Parent>(in: RenderContext<Parent>, key: String) -> Rendering"},{"type":"method","path":"\/documentation\/workflow\/anyworkflow\/rendered(in:key:outputmap:)","title":"func rendered<Parent, Action>(in: RenderContext<Parent>, key: String, outputMap: (Output) -> Action) -> Rendering"},{"type":"method","path":"\/documentation\/workflow\/anyworkflow\/running(in:key:)","title":"func running<Parent>(in: RenderContext<Parent>, key: String)"},{"type":"method","path":"\/documentation\/workflow\/anyworkflow\/running(in:key:outputmap:)","title":"func running<Parent, Action>(in: RenderContext<Parent>, key: String, outputMap: (Output) -> Action)"}],"title":"AnyWorkflowConvertible Implementations","type":"symbol","path":"\/documentation\/workflow\/anyworkflow\/anyworkflowconvertible-implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/workflow\/anyworkflow\/makeinitialstate()","type":"method","title":"func makeInitialState() -> State"},{"path":"\/documentation\/workflow\/anyworkflow\/render(state:context:)","type":"method","title":"func render(state: Void, context: RenderContext<AnyWorkflow<Rendering, Output>>) -> Rendering"},{"path":"\/documentation\/workflow\/anyworkflow\/workflowdidchange(from:state:)","type":"method","title":"func workflowDidChange(from: Self, state: inout State)"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/workflow\/anyworkflow\/output","type":"typealias","title":"AnyWorkflow.Output"},{"path":"\/documentation\/workflow\/anyworkflow\/rendering","type":"typealias","title":"AnyWorkflow.Rendering"},{"path":"\/documentation\/workflow\/anyworkflow\/state","type":"typealias","title":"AnyWorkflow.State"}],"title":"Workflow Implementations","type":"symbol","path":"\/documentation\/workflow\/anyworkflow\/workflow-implementations"}]},{"path":"\/documentation\/workflow\/anyworkflowaction","title":"AnyWorkflowAction","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/workflow\/anyworkflowaction\/init(_:)","type":"init","title":"init<E>(E)"},{"path":"\/documentation\/workflow\/anyworkflowaction\/init(_:fileid:line:)-5sv6w","type":"init","title":"init(ActionApplyClosure, fileID: StaticString, line: UInt)"},{"path":"\/documentation\/workflow\/anyworkflowaction\/init(_:fileid:line:)-9he3r","type":"init","title":"init((inout WorkflowType.State) -> WorkflowType.Output?, fileID: StaticString, line: UInt)"},{"path":"\/documentation\/workflow\/anyworkflowaction\/init(sendingoutput:)","type":"init","title":"init(sendingOutput: WorkflowType.Output)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/workflow\/anyworkflowaction\/base","type":"property","title":"let base: Any"},{"path":"\/documentation\/workflow\/anyworkflowaction\/isclosurebased","type":"property","title":"let isClosureBased: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/workflow\/anyworkflowaction\/apply(tostate:context:)","type":"method","title":"func apply(toState: inout WorkflowType.State, context: ApplyContext<WorkflowType>) -> WorkflowType.Output?"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/workflow\/anyworkflowaction\/noaction","type":"property","title":"static var noAction: AnyWorkflowAction<WorkflowType>"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/workflow\/anyworkflowaction\/workflowaction-implementations","children":[{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/workflow\/anyworkflowaction\/actionapplyclosure","type":"typealias","title":"AnyWorkflowAction.ActionApplyClosure"}],"type":"symbol","title":"WorkflowAction Implementations"}]},{"path":"\/documentation\/workflow\/applycontext","title":"ApplyContext","type":"struct","children":[{"type":"groupMarker","title":"Subscripts"},{"type":"subscript","path":"\/documentation\/workflow\/applycontext\/subscript(workflowvalue:)","title":"subscript<Value>(workflowValue _: KeyPath<WorkflowType, Value>) -> Value"}]},{"path":"\/documentation\/workflow\/sink","title":"Sink","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init((Value) -> Void)","path":"\/documentation\/workflow\/sink\/init(_:)"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func contraMap<NewValue>((NewValue) -> Value) -> Sink<NewValue>","path":"\/documentation\/workflow\/sink\/contramap(_:)"},{"type":"method","title":"func send(Value)","path":"\/documentation\/workflow\/sink\/send(_:)"}]},{"path":"\/documentation\/workflow\/statemutationsink","title":"StateMutationSink","type":"struct","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func send((inout WorkflowType.State) -> Void)","type":"method","path":"\/documentation\/workflow\/statemutationsink\/send(_:)"},{"title":"func send<Value>(WritableKeyPath<WorkflowType.State, Value>, value: Value)","type":"method","path":"\/documentation\/workflow\/statemutationsink\/send(_:value:)"}]},{"path":"\/documentation\/workflow\/workflowhierarchydebugsnapshot","title":"WorkflowHierarchyDebugSnapshot","type":"struct","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","path":"\/documentation\/workflow\/workflowhierarchydebugsnapshot\/child","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/workflow\/workflowhierarchydebugsnapshot\/child\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var key: String","type":"property","path":"\/documentation\/workflow\/workflowhierarchydebugsnapshot\/child\/key"},{"title":"var snapshot: WorkflowHierarchyDebugSnapshot","type":"property","path":"\/documentation\/workflow\/workflowhierarchydebugsnapshot\/child\/snapshot"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/workflow\/workflowhierarchydebugsnapshot\/child\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/workflow\/workflowhierarchydebugsnapshot\/child\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}],"title":"WorkflowHierarchyDebugSnapshot.Child"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/workflow\/workflowhierarchydebugsnapshot\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/workflow\/workflowhierarchydebugsnapshot\/children","title":"var children: [Child]"},{"type":"property","path":"\/documentation\/workflow\/workflowhierarchydebugsnapshot\/statedescription","title":"var stateDescription: String"},{"type":"property","path":"\/documentation\/workflow\/workflowhierarchydebugsnapshot\/workflowtype","title":"var workflowType: String"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/workflow\/workflowhierarchydebugsnapshot\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/workflow\/workflowhierarchydebugsnapshot\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}]},{"path":"\/documentation\/workflow\/workflowsession","title":"WorkflowSession","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"title":"WorkflowSession.Identifier","path":"\/documentation\/workflow\/workflowsession\/identifier","children":[{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/workflow\/workflowsession\/identifier\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/workflow\/workflowsession\/identifier\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var parent: WorkflowSession?","path":"\/documentation\/workflow\/workflowsession\/parent","type":"property"},{"title":"let renderKey: String","path":"\/documentation\/workflow\/workflowsession\/renderkey","type":"property"},{"title":"let sessionID: WorkflowSession.Identifier","path":"\/documentation\/workflow\/workflowsession\/sessionid","type":"property"},{"title":"let workflowType: Any.Type","path":"\/documentation\/workflow\/workflowsession\/workflowtype","type":"property"}]},{"path":"\/documentation\/workflow\/workflowupdatedebuginfo","title":"WorkflowUpdateDebugInfo","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/workflow\/workflowupdatedebuginfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/workflow\/workflowupdatedebuginfo\/kind-swift.property","title":"var kind: Kind","type":"property"},{"path":"\/documentation\/workflow\/workflowupdatedebuginfo\/workflowtype","title":"var workflowType: String","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/workflow\/workflowupdatedebuginfo\/kind-swift.enum","title":"WorkflowUpdateDebugInfo.Kind","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case childDidUpdate(WorkflowUpdateDebugInfo)","type":"case","path":"\/documentation\/workflow\/workflowupdatedebuginfo\/kind-swift.enum\/childdidupdate(_:)"},{"title":"case didUpdate(source: Source)","type":"case","path":"\/documentation\/workflow\/workflowupdatedebuginfo\/kind-swift.enum\/didupdate(source:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Decodable Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","type":"init","path":"\/documentation\/workflow\/workflowupdatedebuginfo\/kind-swift.enum\/init(from:)"}],"path":"\/documentation\/workflow\/workflowupdatedebuginfo\/kind-swift.enum\/decodable-implementations"},{"title":"Encodable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/workflow\/workflowupdatedebuginfo\/kind-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws"}],"path":"\/documentation\/workflow\/workflowupdatedebuginfo\/kind-swift.enum\/encodable-implementations"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/workflow\/workflowupdatedebuginfo\/kind-swift.enum\/!=(_:_:)","type":"op"}],"path":"\/documentation\/workflow\/workflowupdatedebuginfo\/kind-swift.enum\/equatable-implementations"}]},{"path":"\/documentation\/workflow\/workflowupdatedebuginfo\/source","title":"WorkflowUpdateDebugInfo.Source","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/workflow\/workflowupdatedebuginfo\/source\/external","type":"case","title":"case external"},{"path":"\/documentation\/workflow\/workflowupdatedebuginfo\/source\/sideeffect","type":"case","title":"case sideEffect"},{"path":"\/documentation\/workflow\/workflowupdatedebuginfo\/source\/subtree(_:)","type":"case","title":"case subtree(WorkflowUpdateDebugInfo)"},{"path":"\/documentation\/workflow\/workflowupdatedebuginfo\/source\/worker","type":"case","title":"case worker"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/workflow\/workflowupdatedebuginfo\/source\/decodable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: Decoder) throws","path":"\/documentation\/workflow\/workflowupdatedebuginfo\/source\/init(from:)"}],"title":"Decodable Implementations"},{"path":"\/documentation\/workflow\/workflowupdatedebuginfo\/source\/encodable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/workflow\/workflowupdatedebuginfo\/source\/encode(to:)","title":"func encode(to: Encoder) throws"}],"title":"Encodable Implementations"},{"path":"\/documentation\/workflow\/workflowupdatedebuginfo\/source\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/workflow\/workflowupdatedebuginfo\/source\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations"}]},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/workflow\/workflowupdatedebuginfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/workflow\/workflowupdatedebuginfo\/!=(_:_:)"}]}]},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/workflow\/workflowlogging","title":"WorkflowLogging","type":"enum","children":[{"title":"Structures","type":"groupMarker"},{"title":"WorkflowLogging.Config","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/workflow\/workflowlogging\/config-swift.struct\/logactions","type":"property","title":"var logActions: Bool"},{"path":"\/documentation\/workflow\/workflowlogging\/config-swift.struct\/loglifetimes","type":"property","title":"var logLifetimes: Bool"},{"path":"\/documentation\/workflow\/workflowlogging\/config-swift.struct\/renderloggingmode-swift.property","type":"property","title":"var renderLoggingMode: RenderLoggingMode"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/workflow\/workflowlogging\/config-swift.struct\/debug","type":"property","title":"static let debug: `Self`"},{"path":"\/documentation\/workflow\/workflowlogging\/config-swift.struct\/rootrendersandactions","type":"property","title":"static let rootRendersAndActions: `Self`"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/workflow\/workflowlogging\/config-swift.struct\/renderloggingmode-swift.enum","type":"enum","title":"WorkflowLogging.Config.RenderLoggingMode","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/workflow\/workflowlogging\/config-swift.struct\/renderloggingmode-swift.enum\/allnodes","title":"case allNodes","type":"case"},{"path":"\/documentation\/workflow\/workflowlogging\/config-swift.struct\/renderloggingmode-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/workflow\/workflowlogging\/config-swift.struct\/renderloggingmode-swift.enum\/rootsonly","title":"case rootsOnly","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/workflow\/workflowlogging\/config-swift.struct\/renderloggingmode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/workflow\/workflowlogging\/config-swift.struct\/renderloggingmode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}]}],"path":"\/documentation\/workflow\/workflowlogging\/config-swift.struct","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var config: Config","path":"\/documentation\/workflow\/workflowlogging\/config-swift.type.property","type":"property"},{"title":"static var enabled: Bool","path":"\/documentation\/workflow\/workflowlogging\/enabled","type":"property"}]}],"path":"\/documentation\/workflow"},{"title":"WorkflowSwiftUI","type":"module","children":[{"type":"groupMarker","title":"Classes"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func action(Model.Action) -> () -> Void","path":"\/documentation\/workflowswiftui\/store\/action(_:)"},{"type":"method","title":"func scope<ChildModel>(collection: KeyPath<Model, IdentifiedArray<some Any, ChildModel>>) -> _StoreCollection<ChildModel>","path":"\/documentation\/workflowswiftui\/store\/scope(collection:)-3nhl9"},{"type":"method","title":"func scope<Substate>(collection: WritableKeyPath<Model.State, IdentifiedArray<some Any, Substate>>) -> _StoreCollection<StateAccessor<Substate>>","path":"\/documentation\/workflowswiftui\/store\/scope(collection:)-5wbhi"},{"type":"method","title":"func scope<ChildModel, ChildCollection>(collection: KeyPath<Model, ChildCollection>) -> _StoreCollection<ChildModel>","path":"\/documentation\/workflowswiftui\/store\/scope(collection:)-7gdup"},{"type":"method","title":"func scope<Substate, SubstateCollection>(collection: WritableKeyPath<Model.State, SubstateCollection>) -> _StoreCollection<StateAccessor<Substate>>","path":"\/documentation\/workflowswiftui\/store\/scope(collection:)-9z79e"},{"type":"method","title":"func scope<Substate>(keyPath: WritableKeyPath<Model.State, Substate?>) -> Store<StateAccessor<Substate>>?","path":"\/documentation\/workflowswiftui\/store\/scope(keypath:)-2ck9z"},{"type":"method","title":"func scope<ChildModel>(keyPath: KeyPath<Model, ChildModel>) -> Store<ChildModel>","path":"\/documentation\/workflowswiftui\/store\/scope(keypath:)-3sryw"},{"type":"method","title":"func scope<Substate>(keyPath: WritableKeyPath<Model.State, Substate>) -> Store<StateAccessor<Substate>>","path":"\/documentation\/workflowswiftui\/store\/scope(keypath:)-5gbo7"},{"type":"method","title":"func scope<ChildModel>(keyPath: KeyPath<Model, ChildModel?>) -> Store<ChildModel>?","path":"\/documentation\/workflowswiftui\/store\/scope(keypath:)-6klbg"},{"type":"method","title":"func send(Model.Action)","path":"\/documentation\/workflowswiftui\/store\/send(_:)"},{"type":"groupMarker","title":"Subscripts"},{"type":"subscript","path":"\/documentation\/workflowswiftui\/store\/subscript(dynamicmember:)-1vper","title":"subscript<ChildModel>(dynamicMember _: KeyPath<Model, ChildModel>) -> Store<ChildModel>"},{"type":"subscript","path":"\/documentation\/workflowswiftui\/store\/subscript(dynamicmember:)-230yc","title":"subscript<ChildModel>(dynamicMember _: KeyPath<Model, ChildModel?>) -> Store<ChildModel>?"},{"type":"subscript","path":"\/documentation\/workflowswiftui\/store\/subscript(dynamicmember:)-2nqgr","title":"subscript<T>(dynamicMember _: WritableKeyPath<State, T>) -> T"},{"type":"subscript","path":"\/documentation\/workflowswiftui\/store\/subscript(dynamicmember:)-3f88b","title":"subscript<ChildModel, ChildCollection>(dynamicMember _: KeyPath<Model, ChildCollection>) -> _StoreCollection<ChildModel>"},{"type":"subscript","path":"\/documentation\/workflowswiftui\/store\/subscript(dynamicmember:)-6rmp4","title":"subscript<Action>(dynamicMember _: KeyPath<Model, Sink<Action>>) -> Sink<Action>"},{"type":"subscript","path":"\/documentation\/workflowswiftui\/store\/subscript(dynamicmember:)-84g8s","title":"subscript<T>(dynamicMember _: KeyPath<State, T>) -> T"},{"type":"subscript","path":"\/documentation\/workflowswiftui\/store\/subscript(dynamicmember:)-885oy","title":"subscript<ChildModel>(dynamicMember _: KeyPath<Model, IdentifiedArray<some Any, ChildModel>>) -> _StoreCollection<ChildModel>"},{"type":"subscript","path":"\/documentation\/workflowswiftui\/store\/subscript(state:action:)","title":"subscript<Value>(state _: KeyPath<State, Value>, action _: CaseKeyPath<Model.Action, Value>) -> Value"},{"type":"subscript","path":"\/documentation\/workflowswiftui\/store\/subscript(state:send:)","title":"subscript<Value>(state _: KeyPath<State, Value>, send _: KeyPath<Model, (Value) -> Void>) -> Value"},{"type":"subscript","path":"\/documentation\/workflowswiftui\/store\/subscript(state:sink:action:)","title":"subscript<Value, Action>(state _: KeyPath<State, Value>, sink _: KeyPath<Model, Sink<Action>>, action _: CaseKeyPath<Action, Value>) -> Value"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/workflowswiftui\/store\/state","title":"Store.State"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/workflowswiftui\/store\/preview(makemodel:)","title":"static func preview(makeModel: (StaticStorePreviewContext) -> Model) -> Store"},{"type":"method","path":"\/documentation\/workflowswiftui\/store\/preview(state:)-33nwe","title":"static func preview<State, Action>(state: State) -> Store<ActionModel<State, Action>>"},{"type":"method","path":"\/documentation\/workflowswiftui\/store\/preview(state:)-3a1wr","title":"static func preview<State>(state: State) -> Store<StateAccessor<State>>"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/workflowswiftui\/store\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/workflowswiftui\/store\/!=(_:_:)","type":"op"},{"title":"static func == (Store, Store) -> Bool","path":"\/documentation\/workflowswiftui\/store\/==(_:_:)","type":"op"}]},{"type":"symbol","path":"\/documentation\/workflowswiftui\/store\/hashable-implementations","title":"Hashable Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/workflowswiftui\/store\/hash(into:)","type":"method"}]},{"type":"symbol","path":"\/documentation\/workflowswiftui\/store\/identifiable-implementations","title":"Identifiable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var id: ObjectIdentifier","type":"property","path":"\/documentation\/workflowswiftui\/store\/id"}]}],"path":"\/documentation\/workflowswiftui\/store","type":"class","title":"Store"},{"type":"groupMarker","title":"Protocols"},{"path":"\/documentation\/workflowswiftui\/observable","type":"protocol","title":"Observable"},{"children":[{"type":"groupMarker","title":"Associated Types"},{"path":"\/documentation\/workflowswiftui\/observablemodel\/state","title":"State","type":"associatedtype"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/workflowswiftui\/observablemodel\/accessor","title":"var accessor: StateAccessor<State>","type":"property"},{"type":"groupMarker","title":"Subscripts"},{"path":"\/documentation\/workflowswiftui\/observablemodel\/subscript(dynamicmember:)-2wc15","title":"subscript<T>(dynamicMember _: WritableKeyPath<State, T>) -> T","type":"subscript"},{"path":"\/documentation\/workflowswiftui\/observablemodel\/subscript(dynamicmember:)-58564","title":"subscript<T>(dynamicMember _: KeyPath<State, T>) -> T","type":"subscript"}],"path":"\/documentation\/workflowswiftui\/observablemodel","type":"protocol","title":"ObservableModel"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"title":"Content","path":"\/documentation\/workflowswiftui\/observablescreen\/content","type":"associatedtype"},{"title":"Model","path":"\/documentation\/workflowswiftui\/observablescreen\/model-swift.associatedtype","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var model: Model","path":"\/documentation\/workflowswiftui\/observablescreen\/model-swift.property","type":"property"},{"title":"var sizingOptions: SwiftUIScreenSizingOptions","path":"\/documentation\/workflowswiftui\/observablescreen\/sizingoptions","type":"property","children":[{"title":"ObservableScreen Implementations","type":"groupMarker","children":[{"type":"property","title":"var sizingOptions: SwiftUIScreenSizingOptions","path":"\/documentation\/workflowswiftui\/observablescreen\/sizingoptions-1fadx"}]}]},{"title":"Instance Methods","type":"groupMarker"},{"title":"func accessibilityPerformEscape() -> Bool","path":"\/documentation\/workflowswiftui\/observablescreen\/accessibilityperformescape()","type":"method","children":[{"type":"groupMarker","title":"ObservableScreen Implementations","children":[{"path":"\/documentation\/workflowswiftui\/observablescreen\/accessibilityperformescape()-3z4kh","title":"func accessibilityPerformEscape() -> Bool","type":"method"}]}]},{"title":"func preferredScreenEdgesDeferringSystemGestures(in: ObservableScreenContext) -> UIRectEdge","path":"\/documentation\/workflowswiftui\/observablescreen\/preferredscreenedgesdeferringsystemgestures(in:)","type":"method","children":[{"title":"ObservableScreen Implementations","children":[{"title":"func preferredScreenEdgesDeferringSystemGestures(in: ObservableScreenContext) -> UIRectEdge","path":"\/documentation\/workflowswiftui\/observablescreen\/preferredscreenedgesdeferringsystemgestures(in:)-5nxrd","type":"method"}],"type":"groupMarker"}]},{"title":"func preferredStatusBarStyle(in: ObservableScreenContext) -> UIStatusBarStyle","path":"\/documentation\/workflowswiftui\/observablescreen\/preferredstatusbarstyle(in:)","type":"method","children":[{"title":"ObservableScreen Implementations","type":"groupMarker","children":[{"path":"\/documentation\/workflowswiftui\/observablescreen\/preferredstatusbarstyle(in:)-5p45g","title":"func preferredStatusBarStyle(in: ObservableScreenContext) -> UIStatusBarStyle","type":"method"}]}]},{"title":"func preferredStatusBarUpdateAnimation(in: ObservableScreenContext) -> UIStatusBarAnimation","path":"\/documentation\/workflowswiftui\/observablescreen\/preferredstatusbarupdateanimation(in:)","type":"method","children":[{"type":"groupMarker","children":[{"title":"func preferredStatusBarUpdateAnimation(in: ObservableScreenContext) -> UIStatusBarAnimation","path":"\/documentation\/workflowswiftui\/observablescreen\/preferredstatusbarupdateanimation(in:)-1qb4a","type":"method"}],"title":"ObservableScreen Implementations"}]},{"title":"func prefersHomeIndicatorAutoHidden(in: ObservableScreenContext) -> Bool","path":"\/documentation\/workflowswiftui\/observablescreen\/prefershomeindicatorautohidden(in:)","type":"method","children":[{"children":[{"title":"func prefersHomeIndicatorAutoHidden(in: ObservableScreenContext) -> Bool","path":"\/documentation\/workflowswiftui\/observablescreen\/prefershomeindicatorautohidden(in:)-7roj0","type":"method"}],"title":"ObservableScreen Implementations","type":"groupMarker"}]},{"title":"func prefersStatusBarHidden(in: ObservableScreenContext) -> Bool","path":"\/documentation\/workflowswiftui\/observablescreen\/prefersstatusbarhidden(in:)","type":"method","children":[{"children":[{"title":"func prefersStatusBarHidden(in: ObservableScreenContext) -> Bool","path":"\/documentation\/workflowswiftui\/observablescreen\/prefersstatusbarhidden(in:)-34mio","type":"method"}],"title":"ObservableScreen Implementations","type":"groupMarker"}]},{"title":"func pressesBegan(Set<UIPress>, with: UIPressesEvent?) -> Bool","path":"\/documentation\/workflowswiftui\/observablescreen\/pressesbegan(_:with:)","type":"method","children":[{"type":"groupMarker","title":"ObservableScreen Implementations","children":[{"path":"\/documentation\/workflowswiftui\/observablescreen\/pressesbegan(_:with:)-749d9","title":"func pressesBegan(Set<UIPress>, with: UIPressesEvent?) -> Bool","type":"method"}]}]},{"title":"func supportedInterfaceOrientations(in: ObservableScreenContext) -> UIInterfaceOrientationMask","path":"\/documentation\/workflowswiftui\/observablescreen\/supportedinterfaceorientations(in:)","type":"method","children":[{"children":[{"path":"\/documentation\/workflowswiftui\/observablescreen\/supportedinterfaceorientations(in:)-5l0fv","title":"func supportedInterfaceOrientations(in: ObservableScreenContext) -> UIInterfaceOrientationMask","type":"method"}],"title":"ObservableScreen Implementations","type":"groupMarker"}]},{"title":"Type Methods","type":"groupMarker"},{"title":"static func makeView(store: Store<Model>) -> Content","path":"\/documentation\/workflowswiftui\/observablescreen\/makeview(store:)","type":"method"},{"title":"static func observableScreenPreview(makeModel: (StaticStorePreviewContext) -> Model) -> some View","path":"\/documentation\/workflowswiftui\/observablescreen\/observablescreenpreview(makemodel:)","type":"method"},{"title":"static func observableScreenPreview<S>(state: S) -> some View","path":"\/documentation\/workflowswiftui\/observablescreen\/observablescreenpreview(state:)-2zlgs","type":"method"},{"title":"static func observableScreenPreview<S, A>(state: S) -> some View","path":"\/documentation\/workflowswiftui\/observablescreen\/observablescreenpreview(state:)-8p935","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Screen Implementations","path":"\/documentation\/workflowswiftui\/observablescreen\/screen-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func viewControllerDescription(environment: ViewEnvironment) -> ViewControllerDescription","path":"\/documentation\/workflowswiftui\/observablescreen\/viewcontrollerdescription(environment:)","type":"method"}]}],"path":"\/documentation\/workflowswiftui\/observablescreen","type":"protocol","title":"ObservableScreen"},{"path":"\/documentation\/workflowswiftui\/observablestate","type":"protocol","title":"ObservableState"},{"path":"\/documentation\/workflowswiftui\/perceptible","type":"protocol","title":"Perceptible","deprecated":true},{"children":[{"title":"Associated Types","type":"groupMarker"},{"title":"Action","type":"associatedtype","path":"\/documentation\/workflowswiftui\/singleactionmodel\/action"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var sendAction: (Action) -> Void","type":"property","path":"\/documentation\/workflowswiftui\/singleactionmodel\/sendaction"}],"path":"\/documentation\/workflowswiftui\/singleactionmodel","type":"protocol","title":"SingleActionModel"},{"type":"groupMarker","title":"Structures"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(accessor: StateAccessor<State>, sendAction: (Action) -> Void)","path":"\/documentation\/workflowswiftui\/actionmodel\/init(accessor:sendaction:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let accessor: StateAccessor<State>","path":"\/documentation\/workflowswiftui\/actionmodel\/accessor"},{"type":"property","title":"let sendAction: (Action) -> Void","path":"\/documentation\/workflowswiftui\/actionmodel\/sendaction"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func constant(state: State) -> ActionModel<State, Action>","path":"\/documentation\/workflowswiftui\/actionmodel\/constant(state:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/workflowswiftui\/actionmodel\/id","type":"property","title":"var id: State.ID"}],"title":"Identifiable Implementations","path":"\/documentation\/workflowswiftui\/actionmodel\/identifiable-implementations"},{"type":"symbol","children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/actionmodel\/subscript(dynamicmember:)-14a2g","title":"subscript<T>(dynamicMember _: KeyPath<State, T>) -> T","type":"subscript"},{"path":"\/documentation\/workflowswiftui\/actionmodel\/subscript(dynamicmember:)-7hy50","title":"subscript<T>(dynamicMember _: WritableKeyPath<State, T>) -> T","type":"subscript"}],"title":"ObservableModel Implementations","path":"\/documentation\/workflowswiftui\/actionmodel\/observablemodel-implementations"}],"path":"\/documentation\/workflowswiftui\/actionmodel","type":"struct","title":"ActionModel"},{"title":"Bindable","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/bindable\/init(_:)","title":"init(Value)","type":"init"},{"path":"\/documentation\/workflowswiftui\/bindable\/init(projectedvalue:)","title":"init(projectedValue: Bindable<Value>)","type":"init"},{"path":"\/documentation\/workflowswiftui\/bindable\/init(wrappedvalue:)","title":"init(wrappedValue: Value)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/bindable\/projectedvalue","title":"var projectedValue: Bindable<Value>","type":"property"},{"path":"\/documentation\/workflowswiftui\/bindable\/wrappedvalue","title":"var wrappedValue: Value","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/bindable\/subscript(dynamicmember:)-670rx","title":"subscript<Subject>(dynamicMember _: ReferenceWritableKeyPath<Value, Subject>) -> Binding<Subject>","type":"subscript"},{"path":"\/documentation\/workflowswiftui\/bindable\/subscript(dynamicmember:)-8o3vd","title":"subscript<Model, Member>(dynamicMember _: KeyPath<Model.State, Member>) -> _StoreBindable<Model, Member>","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/bindable\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/workflowswiftui\/bindable\/id","title":"var id: Value.ID"}]}],"path":"\/documentation\/workflowswiftui\/bindable"},{"title":"ObservableScreenContext","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(environment: ViewEnvironment, safeAreaInsets: UIEdgeInsets, windowSize: CGSize?)","path":"\/documentation\/workflowswiftui\/observablescreencontext\/init(environment:safeareainsets:windowsize:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let environment: ViewEnvironment","path":"\/documentation\/workflowswiftui\/observablescreencontext\/environment","type":"property"},{"title":"let safeAreaInsets: UIEdgeInsets","path":"\/documentation\/workflowswiftui\/observablescreencontext\/safeareainsets","type":"property"},{"title":"let windowSize: CGSize?","path":"\/documentation\/workflowswiftui\/observablescreencontext\/windowsize","type":"property"}],"path":"\/documentation\/workflowswiftui\/observablescreencontext"},{"title":"ObservableStateID","type":"struct","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func == (`Self`, `Self`) -> Bool","path":"\/documentation\/workflowswiftui\/observablestateid\/==(_:_:)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/workflowswiftui\/observablestateid\/init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/workflowswiftui\/observablestateid\/hash(into:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/workflowswiftui\/observablestateid\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/workflowswiftui\/observablestateid\/!=(_:_:)"}],"type":"symbol"}],"path":"\/documentation\/workflowswiftui\/observablestateid"},{"title":"ObservationRegistrar","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/observationregistrar\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/observationregistrar\/access(_:keypath:)","title":"func access<Subject, Member>(Subject, keyPath: KeyPath<Subject, Member>)","type":"method"},{"path":"\/documentation\/workflowswiftui\/observationregistrar\/didset(_:keypath:)","title":"func didSet<Subject, Member>(Subject, keyPath: KeyPath<Subject, Member>)","type":"method"},{"path":"\/documentation\/workflowswiftui\/observationregistrar\/willset(_:keypath:)","title":"func willSet<Subject, Member>(Subject, keyPath: KeyPath<Subject, Member>)","type":"method"},{"path":"\/documentation\/workflowswiftui\/observationregistrar\/withmutation(of:keypath:_:)","title":"func withMutation<Subject, Member, T>(of: Subject, keyPath: KeyPath<Subject, Member>, () throws -> T) rethrows -> T","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/observationregistrar\/decodable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/observationregistrar\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"title":"Decodable Implementations","type":"symbol"},{"path":"\/documentation\/workflowswiftui\/observationregistrar\/encodable-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder)","path":"\/documentation\/workflowswiftui\/observationregistrar\/encode(to:)"}],"title":"Encodable Implementations","type":"symbol"},{"path":"\/documentation\/workflowswiftui\/observationregistrar\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/workflowswiftui\/observationregistrar\/!=(_:_:)"},{"title":"static func == (ObservationRegistrar, ObservationRegistrar) -> Bool","type":"op","path":"\/documentation\/workflowswiftui\/observationregistrar\/==(_:_:)"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/workflowswiftui\/observationregistrar\/hashable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/workflowswiftui\/observationregistrar\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/workflowswiftui\/observationregistrar\/hash(into:)","type":"method"}],"title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/workflowswiftui\/observationregistrar"},{"title":"ObservationStateRegistrar","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var id: ObservableStateID","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/id","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func access<Subject>(Subject, keyPath: KeyPath<Subject, some Any>)","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/access(_:keypath:)-6ph9g","type":"method"},{"title":"func access<Subject>(Subject, keyPath: KeyPath<Subject, some Any>)","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/access(_:keypath:)-8j6d6","type":"method"},{"title":"func didModify<Subject, Member>(Subject, keyPath: KeyPath<Subject, Member>, inout Member, Member, (Member, Member) -> Bool)","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/didmodify(_:keypath:_:_:_:)-w7ka","type":"method"},{"title":"func didModify<Subject, Member>(Subject, keyPath: KeyPath<Subject, Member>, inout Member, Member, (Member, Member) -> Bool)","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/didmodify(_:keypath:_:_:_:)-z24a","type":"method"},{"title":"func mutate<Subject, Value>(Subject, keyPath: KeyPath<Subject, some Any>, inout Value, Value, (Value, Value) -> Bool)","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/mutate(_:keypath:_:_:_:)-1qajn","type":"method"},{"title":"func mutate<Subject, Value>(Subject, keyPath: KeyPath<Subject, some Any>, inout Value, Value, (Value, Value) -> Bool)","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/mutate(_:keypath:_:_:_:)-k3h1","type":"method"},{"title":"func willModify<Subject, Member>(Subject, keyPath: KeyPath<Subject, Member>, inout Member) -> Member","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/willmodify(_:keypath:_:)-42qp2","type":"method"},{"title":"func willModify<Subject, Member>(Subject, keyPath: KeyPath<Subject, Member>, inout Member) -> Member","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/willmodify(_:keypath:_:)-4a49u","type":"method"},{"title":"func willModify<Subject, Member>(Subject, keyPath: KeyPath<Subject, Member>, inout Member) -> Member","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/willmodify(_:keypath:_:)-5jm8l","type":"method"},{"title":"func willModify<Subject, Member>(Subject, keyPath: KeyPath<Subject, Member>, inout Member) -> Member","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/willmodify(_:keypath:_:)-6jnb2","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Decodable Implementations","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/decodable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/init(from:)","type":"init"}]},{"title":"Encodable Implementations","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/encodable-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/encode(to:)","type":"method"}]},{"title":"Equatable Implementations","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/!=(_:_:)"},{"title":"static func == (`Self`, `Self`) -> Bool","type":"op","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/==(_:_:)"}]},{"title":"Hashable Implementations","path":"\/documentation\/workflowswiftui\/observationstateregistrar\/hashable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/workflowswiftui\/observationstateregistrar\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"path":"\/documentation\/workflowswiftui\/observationstateregistrar"},{"deprecated":true,"title":"PerceptionRegistrar","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/perceptionregistrar\/init(isperceptioncheckingenabled:)","title":"init(isPerceptionCheckingEnabled: Bool)","type":"init","deprecated":true},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/perceptionregistrar\/access(_:keypath:)-1z1oh","title":"func access<Subject, Member>(Subject, keyPath: KeyPath<Subject, Member>)","type":"method","deprecated":true},{"path":"\/documentation\/workflowswiftui\/perceptionregistrar\/access(_:keypath:)-9gj4n","title":"func access<Subject, Member>(Subject, keyPath: KeyPath<Subject, Member>)","type":"method"},{"path":"\/documentation\/workflowswiftui\/perceptionregistrar\/access(_:keypath:fileid:filepath:line:column:)","title":"func access<Subject, Member>(Subject, keyPath: KeyPath<Subject, Member>, fileID: StaticString, filePath: StaticString, line: UInt, column: UInt)","type":"method","deprecated":true},{"path":"\/documentation\/workflowswiftui\/perceptionregistrar\/didset(_:keypath:)-7g8tk","title":"func didSet<Subject, Member>(Subject, keyPath: KeyPath<Subject, Member>)","type":"method","deprecated":true},{"path":"\/documentation\/workflowswiftui\/perceptionregistrar\/didset(_:keypath:)-8azv6","title":"func didSet<Subject, Member>(Subject, keyPath: KeyPath<Subject, Member>)","type":"method"},{"path":"\/documentation\/workflowswiftui\/perceptionregistrar\/willset(_:keypath:)-41df8","title":"func willSet<Subject, Member>(Subject, keyPath: KeyPath<Subject, Member>)","type":"method"},{"path":"\/documentation\/workflowswiftui\/perceptionregistrar\/willset(_:keypath:)-8srtc","title":"func willSet<Subject, Member>(Subject, keyPath: KeyPath<Subject, Member>)","type":"method","deprecated":true},{"path":"\/documentation\/workflowswiftui\/perceptionregistrar\/withmutation(of:keypath:_:)-689dq","title":"func withMutation<Subject, Member, T>(of: Subject, keyPath: KeyPath<Subject, Member>, () throws -> T) rethrows -> T","type":"method"},{"type":"method","path":"\/documentation\/workflowswiftui\/perceptionregistrar\/withmutation(of:keypath:_:)-6li25","deprecated":true,"title":"func withMutation<Subject, Member, T>(of: Subject, keyPath: KeyPath<Subject, Member>, () throws -> T) rethrows -> T"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/workflowswiftui\/perceptionregistrar\/init(from:)","type":"init"}],"type":"symbol","path":"\/documentation\/workflowswiftui\/perceptionregistrar\/decodable-implementations","title":"Decodable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder)","path":"\/documentation\/workflowswiftui\/perceptionregistrar\/encode(to:)"}],"type":"symbol","path":"\/documentation\/workflowswiftui\/perceptionregistrar\/encodable-implementations","title":"Encodable Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/workflowswiftui\/perceptionregistrar\/!=(_:_:)","type":"op"},{"title":"static func == (PerceptionRegistrar, PerceptionRegistrar) -> Bool","path":"\/documentation\/workflowswiftui\/perceptionregistrar\/==(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/workflowswiftui\/perceptionregistrar\/equatable-implementations","title":"Equatable Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/perceptionregistrar\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol","path":"\/documentation\/workflowswiftui\/perceptionregistrar\/hashable-implementations","title":"Hashable Implementations"}],"path":"\/documentation\/workflowswiftui\/perceptionregistrar"},{"deprecated":true,"title":"Perceptions","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func next() async throws(Failure) -> Element?","type":"method","deprecated":true,"path":"\/documentation\/workflowswiftui\/perceptions\/iterator\/next()"},{"title":"func next(isolation: isolated (any Actor)?) async throws(Failure) -> Element?","type":"method","deprecated":true,"path":"\/documentation\/workflowswiftui\/perceptions\/iterator\/next(isolation:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"AsyncIteratorProtocol Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func next() async throws(Self.Failure) -> Self.Element?","type":"method","path":"\/documentation\/workflowswiftui\/perceptions\/iterator\/next()-7xwhi"},{"title":"func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?","type":"method","path":"\/documentation\/workflowswiftui\/perceptions\/iterator\/next(isolation:)-4uq8z"}],"path":"\/documentation\/workflowswiftui\/perceptions\/iterator\/asynciteratorprotocol-implementations"}],"path":"\/documentation\/workflowswiftui\/perceptions\/iterator","title":"Perceptions.Iterator","type":"struct","deprecated":true},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/perceptions\/init(_:)","title":"init(() throws(Failure) -> Element)","type":"init","deprecated":true},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/perceptions\/makeasynciterator()","title":"func makeAsyncIterator() -> Perceptions<Element, Failure>.Iterator","type":"method","deprecated":true},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/perceptions\/untilfinished(_:)","title":"static func untilFinished(() throws(Failure) -> Perceptions<Element, Failure>.Iteration) -> Perceptions<Element, Failure>","type":"method","deprecated":true},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/workflowswiftui\/perceptions\/iteration\/finish","type":"case","title":"case finish","deprecated":true},{"path":"\/documentation\/workflowswiftui\/perceptions\/iteration\/next(_:)","type":"case","title":"case next(Element)","deprecated":true}],"path":"\/documentation\/workflowswiftui\/perceptions\/iteration","title":"Perceptions.Iteration","type":"enum","deprecated":true},{"title":"Default Implementations","type":"groupMarker"},{"title":"AsyncSequence Implementations","path":"\/documentation\/workflowswiftui\/perceptions\/asyncsequence-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var characters: AsyncCharacterSequence<Self>","path":"\/documentation\/workflowswiftui\/perceptions\/characters"},{"type":"property","title":"var lines: AsyncLineSequence<Self>","path":"\/documentation\/workflowswiftui\/perceptions\/lines"},{"type":"property","title":"var unicodeScalars: AsyncUnicodeScalarSequence<Self>","path":"\/documentation\/workflowswiftui\/perceptions\/unicodescalars"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","path":"\/documentation\/workflowswiftui\/perceptions\/allsatisfy(_:)"},{"type":"method","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","path":"\/documentation\/workflowswiftui\/perceptions\/compactmap(_:)-187jo"},{"type":"method","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","path":"\/documentation\/workflowswiftui\/perceptions\/compactmap(_:)-76i6t"},{"type":"method","title":"func contains(Self.Element) async rethrows -> Bool","path":"\/documentation\/workflowswiftui\/perceptions\/contains(_:)"},{"type":"method","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","path":"\/documentation\/workflowswiftui\/perceptions\/contains(where:)"},{"type":"method","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","path":"\/documentation\/workflowswiftui\/perceptions\/drop(while:)"},{"type":"method","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","path":"\/documentation\/workflowswiftui\/perceptions\/dropfirst(_:)"},{"type":"method","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","path":"\/documentation\/workflowswiftui\/perceptions\/filter(_:)"},{"type":"method","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","path":"\/documentation\/workflowswiftui\/perceptions\/first(where:)"},{"type":"method","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","path":"\/documentation\/workflowswiftui\/perceptions\/flatmap(_:)-13j29"},{"type":"method","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","path":"\/documentation\/workflowswiftui\/perceptions\/flatmap(_:)-1fh4w"},{"type":"method","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","path":"\/documentation\/workflowswiftui\/perceptions\/flatmap(_:)-2njq4"},{"type":"method","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","path":"\/documentation\/workflowswiftui\/perceptions\/flatmap(_:)-9troc"},{"type":"method","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","path":"\/documentation\/workflowswiftui\/perceptions\/map(_:)-41i2f"},{"type":"method","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","path":"\/documentation\/workflowswiftui\/perceptions\/map(_:)-6k4fn"},{"type":"method","title":"func max() async rethrows -> Self.Element?","path":"\/documentation\/workflowswiftui\/perceptions\/max()"},{"type":"method","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","path":"\/documentation\/workflowswiftui\/perceptions\/max(by:)"},{"type":"method","title":"func min() async rethrows -> Self.Element?","path":"\/documentation\/workflowswiftui\/perceptions\/min()"},{"type":"method","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","path":"\/documentation\/workflowswiftui\/perceptions\/min(by:)"},{"type":"method","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","path":"\/documentation\/workflowswiftui\/perceptions\/prefix(_:)"},{"type":"method","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","path":"\/documentation\/workflowswiftui\/perceptions\/prefix(while:)"},{"type":"method","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","path":"\/documentation\/workflowswiftui\/perceptions\/reduce(_:_:)"},{"type":"method","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","path":"\/documentation\/workflowswiftui\/perceptions\/reduce(into:_:)"}],"type":"symbol"}],"path":"\/documentation\/workflowswiftui\/perceptions"},{"title":"StateAccessor","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/workflowswiftui\/stateaccessor\/init(state:sendvalue:)","title":"init(state: State, sendValue: ((inout State) -> Void) -> Void)"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/workflowswiftui\/stateaccessor\/constant(state:)","title":"static func constant(state: State) -> StateAccessor<State>"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/workflowswiftui\/stateaccessor\/identifiable-implementations","title":"Identifiable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/workflowswiftui\/stateaccessor\/id","type":"property","title":"var id: State.ID"}]},{"type":"symbol","path":"\/documentation\/workflowswiftui\/stateaccessor\/observablemodel-implementations","title":"ObservableModel Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var accessor: StateAccessor<State>","type":"property","path":"\/documentation\/workflowswiftui\/stateaccessor\/accessor"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript<T>(dynamicMember _: KeyPath<State, T>) -> T","type":"subscript","path":"\/documentation\/workflowswiftui\/stateaccessor\/subscript(dynamicmember:)-18w9j"},{"title":"subscript<T>(dynamicMember _: WritableKeyPath<State, T>) -> T","type":"subscript","path":"\/documentation\/workflowswiftui\/stateaccessor\/subscript(dynamicmember:)-6urs6"}]}],"path":"\/documentation\/workflowswiftui\/stateaccessor"},{"title":"StaticStorePreviewContext","type":"struct","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func makeActionModel<State, Action>(state: State) -> ActionModel<State, Action>","path":"\/documentation\/workflowswiftui\/staticstorepreviewcontext\/makeactionmodel(state:)"},{"type":"method","title":"func makeSink<Action>(of: Action.Type) -> Sink<Action>","path":"\/documentation\/workflowswiftui\/staticstorepreviewcontext\/makesink(of:)"},{"type":"method","title":"func makeStateAccessor<State>(state: State) -> StateAccessor<State>","path":"\/documentation\/workflowswiftui\/staticstorepreviewcontext\/makestateaccessor(state:)"}],"path":"\/documentation\/workflowswiftui\/staticstorepreviewcontext"},{"title":"SwiftUIScreenSizingOptions","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(rawValue: Int)","path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/init(rawvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let rawValue: Int","path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/rawvalue","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let preferredContentSize: SwiftUIScreenSizingOptions","path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/preferredcontentsize","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/equatable-implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"title":"OptionSet Implementations","path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/optionset-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"title":"SetAlgebra Implementations","path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions\/setalgebra-implementations","type":"symbol"}],"path":"\/documentation\/workflowswiftui\/swiftuiscreensizingoptions"},{"deprecated":true,"title":"WithPerceptionTracking","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/init(content:)-1c7ub","type":"init","title":"init<R>(content: () -> Content)"},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/init(content:)-2bg47","type":"init","title":"init(content: () -> Content)"},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/init(content:)-32qfb","type":"init","title":"init(content: @autoclosure () -> Content)","deprecated":true},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/init(content:)-5q8wp","type":"init","title":"init(content: () -> Content)"},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/init(content:)-6hkj1","type":"init","title":"init(content: () -> Content)"},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/init(content:)-7481b","type":"init","title":"init(content: () -> Content)"},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/init(content:)-8bqt1","type":"init","title":"init<R, C>(content: () -> Content)"},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/init(content:)-nu1b","type":"init","title":"init(content: () -> Content)"},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/init(content:)-yrfm","type":"init","title":"init(content: () -> Content)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","deprecated":true,"title":"var body: Content","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/body"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func accessibilityHidden(Bool) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/accessibilityhidden(_:)-1ufdf"},{"type":"method","title":"func accessibilityIdentifier(String) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/accessibilityidentifier(_:)-658xp"},{"type":"method","title":"func accessibilityLabel(Text) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/accessibilitylabel(_:)-3wh6v"},{"type":"method","title":"func accessibilityLabel<S>(S) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/accessibilitylabel(_:)-783ry"},{"type":"method","title":"func accessibilityLabel(LocalizedStringKey) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/accessibilitylabel(_:)-7vm1p"},{"type":"method","title":"func accessibilityValue(LocalizedStringKey) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/accessibilityvalue(_:)-25zcj"},{"type":"method","title":"func accessibilityValue<S>(S) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/accessibilityvalue(_:)-2bpx3"},{"type":"method","title":"func accessibilityValue(Text) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/accessibilityvalue(_:)-77q52"},{"type":"method","title":"func alignsMarkStylesWithPlotArea(Bool) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/alignsmarkstyleswithplotarea(_:)"},{"type":"method","title":"func annotation<C>(position: AnnotationPosition, alignment: Alignment, spacing: CGFloat?, content: (AnnotationContext) -> C) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/annotation(position:alignment:spacing:content:)-3str7"},{"type":"method","title":"func annotation<C>(position: AnnotationPosition, alignment: Alignment, spacing: CGFloat?, content: () -> C) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/annotation(position:alignment:spacing:content:)-5fx4w"},{"type":"method","title":"func annotation<C>(position: AnnotationPosition, alignment: Alignment, spacing: CGFloat?, overflowResolution: AnnotationOverflowResolution, content: () -> C) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/annotation(position:alignment:spacing:overflowresolution:content:)-4fdkj"},{"type":"method","title":"func annotation<C>(position: AnnotationPosition, alignment: Alignment, spacing: CGFloat?, overflowResolution: AnnotationOverflowResolution, content: (AnnotationContext) -> C) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/annotation(position:alignment:spacing:overflowresolution:content:)-7ajrc"},{"type":"method","title":"func blur(radius: CGFloat) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/blur(radius:)"},{"type":"method","title":"func clipShape(some Shape, style: FillStyle) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/clipshape(_:style:)-6z9k2"},{"type":"method","title":"func compositingLayer() -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/compositinglayer()"},{"type":"method","title":"func compositingLayer<V>(style: (PlaceholderContentView<Self>) -> V) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/compositinglayer(style:)"},{"type":"method","title":"func cornerRadius(CGFloat, style: RoundedCornerStyle) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/cornerradius(_:style:)"},{"type":"method","title":"func foregroundStyle<S>(S) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/foregroundstyle(_:)-8w0w3"},{"type":"method","title":"func foregroundStyle<D>(by: PlottableValue<D>) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/foregroundstyle(by:)"},{"type":"method","title":"func interpolationMethod(InterpolationMethod) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/interpolationmethod(_:)"},{"type":"method","title":"func lineStyle(StrokeStyle) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/linestyle(_:)"},{"type":"method","title":"func lineStyle<D>(by: PlottableValue<D>) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/linestyle(by:)"},{"type":"method","title":"func mask<C>(content: () -> C) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/mask(content:)"},{"type":"method","title":"func offset(CGSize) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/offset(_:)-7qsgl"},{"type":"method","title":"func offset(x: CGFloat, y: CGFloat) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/offset(x:y:)-4d2gj"},{"type":"method","title":"func offset(x: CGFloat, yStart: CGFloat, yEnd: CGFloat) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/offset(x:ystart:yend:)"},{"type":"method","title":"func offset(xStart: CGFloat, xEnd: CGFloat, y: CGFloat) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/offset(xstart:xend:y:)"},{"type":"method","title":"func offset(xStart: CGFloat, xEnd: CGFloat, yStart: CGFloat, yEnd: CGFloat) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/offset(xstart:xend:ystart:yend:)"},{"type":"method","title":"func opacity(Double) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/opacity(_:)-9oo4n"},{"type":"method","title":"func position<P>(by: PlottableValue<P>, axis: Axis?, span: MarkDimension) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/position(by:axis:span:)"},{"type":"method","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/shadow(color:radius:x:y:)-3rier"},{"type":"method","title":"func symbol<S>(S) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/symbol(_:)"},{"type":"method","title":"func symbol<D>(by: PlottableValue<D>) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/symbol(by:)"},{"type":"method","title":"func symbol<V>(symbol: () -> V) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/symbol(symbol:)"},{"type":"method","title":"func symbolSize(CGSize) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/symbolsize(_:)-4v3at"},{"type":"method","title":"func symbolSize(CGFloat) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/symbolsize(_:)-8k3p9"},{"type":"method","title":"func symbolSize<D>(by: PlottableValue<D>) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/symbolsize(by:)"},{"type":"method","title":"func zIndex(Double) -> some ChartContent","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/zindex(_:)-1a9wp"}],"title":"ChartContent Implementations","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/chartcontent-implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func customizationBehavior(ToolbarCustomizationBehavior) -> some CustomizableToolbarContent","type":"method","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/customizationbehavior(_:)"},{"title":"func defaultCustomization() -> some CustomizableToolbarContent","deprecated":true,"type":"method","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/defaultcustomization()"},{"title":"func defaultCustomization(Visibility, options: ToolbarCustomizationOptions) -> some CustomizableToolbarContent","type":"method","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/defaultcustomization(_:options:)"}],"title":"CustomizableToolbarContent Implementations","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/customizabletoolbarcontent-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func backgroundTask<D, R>(BackgroundTask<D, R>, action: (D) async -> R) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/backgroundtask(_:action:)"},{"type":"method","title":"func commands<Content>(content: () -> Content) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/commands(content:)"},{"type":"method","title":"func commandsRemoved() -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/commandsremoved()"},{"type":"method","title":"func commandsReplaced<Content>(content: () -> Content) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/commandsreplaced(content:)"},{"type":"method","title":"func defaultAppStorage(UserDefaults) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/defaultappstorage(_:)-o73s"},{"type":"method","title":"func defaultSize(CGSize) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/defaultsize(_:)"},{"type":"method","title":"func defaultSize(width: CGFloat, height: CGFloat) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/defaultsize(width:height:)"},{"type":"method","title":"func documentBrowserContextMenu(([URL]?) -> some View) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/documentbrowsercontextmenu(_:)-2bl43"},{"type":"method","title":"func environment<T>(T?) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/environment(_:)-8jki9"},{"type":"method","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/environment(_:_:)-3njqh"},{"type":"method","title":"func environmentObject<T>(T) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/environmentobject(_:)-4z7we"},{"type":"method","title":"func handlesExternalEvents(matching: Set<String>) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/handlesexternalevents(matching:)"},{"type":"method","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/onchange(of:initial:_:)-2qp8u"},{"type":"method","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/onchange(of:initial:_:)-3bzyn"},{"deprecated":true,"type":"method","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/onchange(of:perform:)-9wfo8"},{"type":"method","title":"func persistentSystemOverlays(Visibility) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/persistentsystemoverlays(_:)-5o96d"},{"type":"method","title":"func restorationBehavior(SceneRestorationBehavior) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/restorationbehavior(_:)"},{"type":"method","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/transformenvironment(_:transform:)-8owh6"},{"type":"method","title":"func windowManagerRole(WindowManagerRole) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/windowmanagerrole(_:)"},{"type":"method","title":"func windowResizability(WindowResizability) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/windowresizability(_:)"},{"type":"method","title":"func windowToolbarLabelStyle(Binding<ToolbarLabelStyle>) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/windowtoolbarlabelstyle(_:)"},{"type":"method","title":"func windowToolbarLabelStyle(fixed: ToolbarLabelStyle) -> some Scene","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/windowtoolbarlabelstyle(fixed:)"}],"title":"Scene Implementations","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/scene-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/tablecolumnbody-swift.property","type":"property","title":"var tableColumnBody: Never"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/alignment(_:)","type":"method","title":"func alignment(TableColumnAlignment) -> some TableColumnContent<Self.TableRowValue, Self.TableColumnSortComparator>\n"},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/customizationid(_:)","type":"method","title":"func customizationID(String) -> some TableColumnContent<Self.TableRowValue, Self.TableColumnSortComparator>\n"},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/defaultvisibility(_:)","type":"method","title":"func defaultVisibility(Visibility) -> some TableColumnContent<Self.TableRowValue, Self.TableColumnSortComparator>\n"},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/disabledcustomizationbehavior(_:)","type":"method","title":"func disabledCustomizationBehavior(TableColumnCustomizationBehavior) -> some TableColumnContent<Self.TableRowValue, Self.TableColumnSortComparator>\n"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/tablecolumnbody-swift.typealias","type":"typealias","title":"WithPerceptionTracking.TableColumnBody"},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/tablecolumnsortcomparator","type":"typealias","title":"WithPerceptionTracking.TableColumnSortComparator"},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/tablerowvalue-21t7a","type":"typealias","title":"WithPerceptionTracking.TableRowValue"}],"title":"TableColumnContent Implementations","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/tablecolumncontent-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var tableRowBody: Never","type":"property","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/tablerowbody-swift.property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func contextMenu<M>(menuItems: () -> M) -> ModifiedContent<Self, _ContextMenuTableRowModifier<M>>","type":"method","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/contextmenu(menuitems:)-80c56"},{"title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> ModifiedContent<Self, _ContextMenuPreviewTableRowModifier<M, P>>","type":"method","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/contextmenu(menuitems:preview:)-86gz9"},{"title":"func draggable<T>(@autoclosure () -> T) -> some TableRowContent<Self.TableRowValue>\n","type":"method","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/draggable(_:)-2ym42"},{"title":"func dropDestination<T>(for: T.Type, action: ([T]) -> Void) -> some TableRowContent<Self.TableRowValue>\n","type":"method","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/dropdestination(for:action:)"},{"title":"func itemProvider((() -> NSItemProvider?)?) -> ModifiedContent<Self, ItemProviderTableRowModifier>","type":"method","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/itemprovider(_:)-6pgo3"},{"title":"func selectionDisabled(Bool) -> some TableRowContent<Self.TableRowValue>\n","type":"method","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/selectiondisabled(_:)-6dtf7"},{"title":"Type Aliases","type":"groupMarker"},{"title":"WithPerceptionTracking.TableRowBody","type":"typealias","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/tablerowbody-swift.typealias"},{"title":"WithPerceptionTracking.TableRowValue","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/tablerowvalue-6otwh","type":"typealias"}],"title":"TableRowContent Implementations","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/tablerowcontent-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/environment(_:)-6kbbq","title":"func environment<T>(T?) -> some View"}],"title":"View Implementations","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/view-implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/withperceptiontracking\/environment(_:)-6kbbq","title":"func environment<T>(T?) -> some View","type":"method"}],"title":"View Implementations","path":"\/documentation\/workflowswiftui\/withperceptiontracking\/view-implementations"}],"path":"\/documentation\/workflowswiftui\/withperceptiontracking"},{"title":"Variables","type":"groupMarker"},{"deprecated":true,"title":"var isPerceptionCheckingEnabled: Bool","type":"var","path":"\/documentation\/workflowswiftui\/isperceptioncheckingenabled"},{"title":"Functions","type":"groupMarker"},{"title":"func withObservationTracking<T>(() -> T, onChange: @autoclosure () -> () -> Void) -> T","type":"func","path":"\/documentation\/workflowswiftui\/withobservationtracking(_:onchange:)"},{"deprecated":true,"title":"func withPerceptionTracking<T>(() -> T, onChange: @autoclosure () -> () -> Void) -> T","type":"func","path":"\/documentation\/workflowswiftui\/withperceptiontracking(_:onchange:)"},{"title":"Macros","type":"groupMarker"},{"title":"macro Observable()","type":"macro","path":"\/documentation\/workflowswiftui\/observable()"},{"title":"macro ObservableState()","type":"macro","path":"\/documentation\/workflowswiftui\/observablestate()"},{"title":"macro ObservationIgnored()","type":"macro","path":"\/documentation\/workflowswiftui\/observationignored()"},{"title":"macro ObservationStateIgnored()","type":"macro","path":"\/documentation\/workflowswiftui\/observationstateignored()"},{"title":"macro ObservationStateTracked()","type":"macro","path":"\/documentation\/workflowswiftui\/observationstatetracked()"},{"title":"macro ObservationTracked()","type":"macro","path":"\/documentation\/workflowswiftui\/observationtracked()"},{"deprecated":true,"title":"macro Perceptible()","type":"macro","path":"\/documentation\/workflowswiftui\/perceptible()"},{"deprecated":true,"title":"macro PerceptionIgnored()","type":"macro","path":"\/documentation\/workflowswiftui\/perceptionignored()"},{"deprecated":true,"title":"macro PerceptionTracked()","type":"macro","path":"\/documentation\/workflowswiftui\/perceptiontracked()"},{"title":"Extended Modules","type":"groupMarker"},{"title":"SwiftUICore","type":"extension","children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func environment<T>(T?) -> some View","path":"\/documentation\/workflowswiftui\/swiftuicore\/view\/environment(_:)","type":"method"}],"path":"\/documentation\/workflowswiftui\/swiftuicore\/view","title":"View","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init<T>(T.Type)","path":"\/documentation\/workflowswiftui\/swiftuicore\/environment\/init(_:)-4wf0x","type":"init"},{"title":"init(Value.Type)","path":"\/documentation\/workflowswiftui\/swiftuicore\/environment\/init(_:)-9chgm","type":"init"}],"path":"\/documentation\/workflowswiftui\/swiftuicore\/environment","title":"Environment","type":"extension"}],"path":"\/documentation\/workflowswiftui\/swiftuicore"},{"title":"UIKit","type":"extension","children":[{"type":"groupMarker","title":"Extended Classes"},{"path":"\/documentation\/workflowswiftui\/uikit\/uiviewcontroller","type":"extension","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func setNeedsUpdateOfSupportedInterfaceOrientationsAndRotateIfNeeded()","path":"\/documentation\/workflowswiftui\/uikit\/uiviewcontroller\/setneedsupdateofsupportedinterfaceorientationsandrotateifneeded()","type":"method"}],"title":"UIViewController"}],"path":"\/documentation\/workflowswiftui\/uikit"},{"title":"Workflow","type":"extension","children":[{"title":"Extended Classes","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/workflow\/rendercontext","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/workflow\/rendercontext\/makeactionmodel(state:)","title":"func makeActionModel<Action>(state: WorkflowType.State) -> ActionModel<WorkflowType.State, Action>","type":"method"},{"path":"\/documentation\/workflowswiftui\/workflow\/rendercontext\/makestateaccessor(state:)","title":"func makeStateAccessor(state: WorkflowType.State) -> StateAccessor<WorkflowType.State>","type":"method"}],"title":"RenderContext","type":"extension"},{"title":"Extended Protocols","type":"groupMarker"},{"path":"\/documentation\/workflowswiftui\/workflow\/workflow","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/workflowswiftui\/workflow\/workflow\/workflowpreview(customizeenvironment:)","title":"func workflowPreview(customizeEnvironment: (inout ViewEnvironment) -> Void) -> some View","type":"method"},{"path":"\/documentation\/workflowswiftui\/workflow\/workflow\/workflowpreview(customizeenvironment:onoutput:)","title":"func workflowPreview(customizeEnvironment: (inout ViewEnvironment) -> Void, onOutput: (Output) -> Void) -> some View","type":"method"}],"title":"Workflow","type":"extension"}],"path":"\/documentation\/workflowswiftui\/workflow"}],"path":"\/documentation\/workflowswiftui"},{"title":"WorkflowTesting","type":"module","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","path":"\/documentation\/workflowtesting\/rendertester","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/workflowtesting\/rendertester\/expectsideeffect(key:file:line:)","type":"method","title":"func expectSideEffect(key: AnyHashable, file: StaticString, line: UInt) -> RenderTester<WorkflowType>"},{"path":"\/documentation\/workflowtesting\/rendertester\/expectsideeffect(key:producingaction:file:line:)","type":"method","title":"func expectSideEffect<ActionType>(key: AnyHashable, producingAction: ActionType, file: StaticString, line: UInt) -> RenderTester<WorkflowType>"},{"path":"\/documentation\/workflowtesting\/rendertester\/expectworkflow(type:key:producingrendering:producingoutput:file:line:assertions:)","type":"method","title":"func expectWorkflow<ExpectedWorkflowType>(type: ExpectedWorkflowType.Type, key: String, producingRendering: ExpectedWorkflowType.Rendering, producingOutput: ExpectedWorkflowType.Output?, file: StaticString, line: UInt, assertions: (ExpectedWorkflowType) -> Void) -> RenderTester<WorkflowType>"},{"path":"\/documentation\/workflowtesting\/rendertester\/expectworkflowignoringoutput(type:key:producingrendering:file:line:assertions:)","type":"method","title":"func expectWorkflowIgnoringOutput<ExpectedWorkflowType>(type: ExpectedWorkflowType.Type, key: String, producingRendering: ExpectedWorkflowType.Rendering, file: StaticString, line: UInt, assertions: (ExpectedWorkflowType) -> Void) -> RenderTester<WorkflowType>"},{"path":"\/documentation\/workflowtesting\/rendertester\/render(file:line:assertions:)","type":"method","title":"func render(file: StaticString, line: UInt, assertions: (WorkflowType.Rendering) throws -> Void) rethrows -> RenderTesterResult<WorkflowType>"}],"title":"RenderTester"},{"type":"struct","path":"\/documentation\/workflowtesting\/rendertesterresult","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func assert<ActionType>(action: ActionType, file: StaticString, fileID: StaticString, line: UInt, column: UInt) -> RenderTesterResult<WorkflowType>","type":"method","path":"\/documentation\/workflowtesting\/rendertesterresult\/assert(action:file:fileid:line:column:)"},{"title":"func assert(output: WorkflowType.Output, file: StaticString, fileID: StaticString, line: UInt, column: UInt) -> RenderTesterResult<WorkflowType>","type":"method","path":"\/documentation\/workflowtesting\/rendertesterresult\/assert(output:file:fileid:line:column:)"},{"title":"func assert(state: WorkflowType.State, file: StaticString, fileID: StaticString, line: UInt, column: UInt) -> RenderTesterResult<WorkflowType>","type":"method","path":"\/documentation\/workflowtesting\/rendertesterresult\/assert(state:file:fileid:line:column:)"},{"title":"func assertNoAction(file: StaticString, line: UInt) -> RenderTesterResult<WorkflowType>","type":"method","path":"\/documentation\/workflowtesting\/rendertesterresult\/assertnoaction(file:line:)"},{"title":"func assertNoOutput(file: StaticString, line: UInt) -> RenderTesterResult<WorkflowType>","type":"method","path":"\/documentation\/workflowtesting\/rendertesterresult\/assertnooutput(file:line:)"},{"title":"func assertStateModifications(file: StaticString, fileID: StaticString, line: UInt, column: UInt, (inout WorkflowType.State) throws -> Void) rethrows -> RenderTesterResult<WorkflowType>","type":"method","path":"\/documentation\/workflowtesting\/rendertesterresult\/assertstatemodifications(file:fileid:line:column:_:)"},{"title":"func verifyAction<ActionType>(type: ActionType.Type, file: StaticString, line: UInt, assertions: (ActionType) throws -> Void) rethrows -> RenderTesterResult<WorkflowType>","type":"method","path":"\/documentation\/workflowtesting\/rendertesterresult\/verifyaction(type:file:line:assertions:)"},{"title":"func verifyOutput(file: StaticString, line: UInt, assertions: (WorkflowType.Output) throws -> Void) rethrows -> RenderTesterResult<WorkflowType>","type":"method","path":"\/documentation\/workflowtesting\/rendertesterresult\/verifyoutput(file:line:assertions:)"},{"title":"func verifyState(file: StaticString, line: UInt, assertions: (WorkflowType.State) throws -> Void) rethrows -> RenderTesterResult<WorkflowType>","type":"method","path":"\/documentation\/workflowtesting\/rendertesterresult\/verifystate(file:line:assertions:)"}],"title":"RenderTesterResult"},{"type":"struct","path":"\/documentation\/workflowtesting\/workflowactiontester","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/workflowtesting\/workflowactiontester\/assert(output:file:line:)","type":"method","title":"func assert(output: WorkflowType.Output, file: StaticString, line: UInt) -> WorkflowActionTester<WorkflowType, Action>"},{"path":"\/documentation\/workflowtesting\/workflowactiontester\/assert(state:file:line:)","type":"method","title":"func assert(state: WorkflowType.State, file: StaticString, line: UInt) -> WorkflowActionTester<WorkflowType, Action>"},{"path":"\/documentation\/workflowtesting\/workflowactiontester\/assertnooutput(file:line:)","type":"method","title":"func assertNoOutput(file: StaticString, line: UInt) -> WorkflowActionTester<WorkflowType, Action>"},{"path":"\/documentation\/workflowtesting\/workflowactiontester\/send(action:)","type":"method","title":"func send(action: Action) -> WorkflowActionTester<WorkflowType, Action>"},{"path":"\/documentation\/workflowtesting\/workflowactiontester\/verifyoutput(file:line:_:)","type":"method","title":"func verifyOutput(file: StaticString, line: UInt, (WorkflowType.Output) throws -> Void) rethrows -> WorkflowActionTester<WorkflowType, Action>"},{"path":"\/documentation\/workflowtesting\/workflowactiontester\/verifystate(_:)","type":"method","title":"func verifyState((WorkflowType.State) throws -> Void) rethrows -> WorkflowActionTester<WorkflowType, Action>"}],"title":"WorkflowActionTester"},{"type":"groupMarker","title":"Extended Modules"},{"type":"extension","path":"\/documentation\/workflowtesting\/workflow","children":[{"title":"Extended Protocols","type":"groupMarker"},{"title":"Workflow","path":"\/documentation\/workflowtesting\/workflow\/workflow","type":"extension","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/workflowtesting\/workflow\/workflow\/rendertester()","title":"func renderTester() -> RenderTester<Self>","type":"method"},{"path":"\/documentation\/workflowtesting\/workflow\/workflow\/rendertester(initialstate:)","title":"func renderTester(initialState: Self.State) -> RenderTester<Self>","type":"method"}]},{"title":"WorkflowAction","path":"\/documentation\/workflowtesting\/workflow\/workflowaction","type":"extension","children":[{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/workflowtesting\/workflow\/workflowaction\/tester(withstate:workflow:)","title":"static func tester(withState: WorkflowType.State, workflow: WorkflowType?) -> WorkflowActionTester<WorkflowType, Self>"}]}],"title":"Workflow"}],"path":"\/documentation\/workflowtesting"},{"title":"WorkflowUI","type":"module","children":[{"title":"Classes","type":"groupMarker"},{"title":"DescribedViewController","path":"\/documentation\/workflowui\/describedviewcontroller","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/workflowui\/describedviewcontroller\/init(description:)","title":"init(description: ViewControllerDescription)"},{"type":"init","path":"\/documentation\/workflowui\/describedviewcontroller\/init(screen:environment:)","title":"init(screen: some Screen, environment: ViewEnvironment)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/workflowui\/describedviewcontroller\/childforhomeindicatorautohidden","title":"var childForHomeIndicatorAutoHidden: UIViewController?"},{"type":"property","path":"\/documentation\/workflowui\/describedviewcontroller\/childforscreenedgesdeferringsystemgestures","title":"var childForScreenEdgesDeferringSystemGestures: UIViewController?"},{"type":"property","path":"\/documentation\/workflowui\/describedviewcontroller\/childforstatusbarhidden","title":"var childForStatusBarHidden: UIViewController?"},{"type":"property","path":"\/documentation\/workflowui\/describedviewcontroller\/childforstatusbarstyle","title":"var childForStatusBarStyle: UIViewController?"},{"type":"property","path":"\/documentation\/workflowui\/describedviewcontroller\/childviewcontrollerforpointerlock","title":"var childViewControllerForPointerLock: UIViewController?"},{"type":"property","path":"\/documentation\/workflowui\/describedviewcontroller\/preferredstatusbarupdateanimation","title":"var preferredStatusBarUpdateAnimation: UIStatusBarAnimation"},{"type":"property","path":"\/documentation\/workflowui\/describedviewcontroller\/supportedinterfaceorientations","title":"var supportedInterfaceOrientations: UIInterfaceOrientationMask"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/workflowui\/describedviewcontroller\/preferredcontentsizedidchange(forchildcontentcontainer:)","title":"func preferredContentSizeDidChange(forChildContentContainer: UIContentContainer)"},{"type":"method","path":"\/documentation\/workflowui\/describedviewcontroller\/update(description:)","title":"func update(description: ViewControllerDescription)"},{"type":"method","path":"\/documentation\/workflowui\/describedviewcontroller\/update(screen:environment:)","title":"func update(screen: some Screen, environment: ViewEnvironment)"},{"type":"method","path":"\/documentation\/workflowui\/describedviewcontroller\/viewdidlayoutsubviews()","title":"func viewDidLayoutSubviews()"},{"type":"method","path":"\/documentation\/workflowui\/describedviewcontroller\/viewdidload()","title":"func viewDidLoad()"}]},{"title":"ScreenViewController","path":"\/documentation\/workflowui\/screenviewcontroller","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(screen: ScreenType, environment: ViewEnvironment)","path":"\/documentation\/workflowui\/screenviewcontroller\/init(screen:environment:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var screen: ScreenType","path":"\/documentation\/workflowui\/screenviewcontroller\/screen"},{"type":"property","title":"var screenType: Screen.Type","path":"\/documentation\/workflowui\/screenviewcontroller\/screentype"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func screenDidChange(from: ScreenType, previousEnvironment: ViewEnvironment)","path":"\/documentation\/workflowui\/screenviewcontroller\/screendidchange(from:previousenvironment:)"},{"type":"method","title":"func update(screen: ScreenType)","path":"\/documentation\/workflowui\/screenviewcontroller\/update(screen:)"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"class func description(for: ScreenType, environment: ViewEnvironment, performInitialUpdate: Bool) -> ViewControllerDescription","path":"\/documentation\/workflowui\/screenviewcontroller\/description(for:environment:performinitialupdate:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var primaryScreen: any Screen","path":"\/documentation\/workflowui\/screenviewcontroller\/primaryscreen"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func findInnermostPrimaryScreen() -> any Screen","path":"\/documentation\/workflowui\/screenviewcontroller\/findinnermostprimaryscreen()"}],"title":"SingleScreenContaining Implementations","type":"symbol","path":"\/documentation\/workflowui\/screenviewcontroller\/singlescreencontaining-implementations"}]},{"title":"ViewEnvironmentCustomizationLifetime","path":"\/documentation\/workflowui\/viewenvironmentcustomizationlifetime","type":"class","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func remove()","type":"method","path":"\/documentation\/workflowui\/viewenvironmentcustomizationlifetime\/remove()"}]},{"title":"ViewEnvironmentUpdateObservationLifetime","path":"\/documentation\/workflowui\/viewenvironmentupdateobservationlifetime","type":"class","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func remove()","path":"\/documentation\/workflowui\/viewenvironmentupdateobservationlifetime\/remove()","type":"method"}]},{"title":"WorkflowHostingController","path":"\/documentation\/workflowui\/workflowhostingcontroller","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init<W>(workflow: W, customizeEnvironment: CustomizeEnvironment, observers: [WorkflowObserver])","path":"\/documentation\/workflowui\/workflowhostingcontroller\/init(workflow:customizeenvironment:observers:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var childForHomeIndicatorAutoHidden: UIViewController?","path":"\/documentation\/workflowui\/workflowhostingcontroller\/childforhomeindicatorautohidden"},{"type":"property","title":"var childForScreenEdgesDeferringSystemGestures: UIViewController?","path":"\/documentation\/workflowui\/workflowhostingcontroller\/childforscreenedgesdeferringsystemgestures"},{"type":"property","title":"var childForStatusBarHidden: UIViewController?","path":"\/documentation\/workflowui\/workflowhostingcontroller\/childforstatusbarhidden"},{"type":"property","title":"var childForStatusBarStyle: UIViewController?","path":"\/documentation\/workflowui\/workflowhostingcontroller\/childforstatusbarstyle"},{"type":"property","title":"var childViewControllerForPointerLock: UIViewController?","path":"\/documentation\/workflowui\/workflowhostingcontroller\/childviewcontrollerforpointerlock"},{"type":"property","title":"var customizeEnvironment: CustomizeEnvironment","path":"\/documentation\/workflowui\/workflowhostingcontroller\/customizeenvironment-swift.property"},{"type":"property","title":"var output: Signal<Output, Never>","path":"\/documentation\/workflowui\/workflowhostingcontroller\/output"},{"type":"property","title":"var preferredStatusBarUpdateAnimation: UIStatusBarAnimation","path":"\/documentation\/workflowui\/workflowhostingcontroller\/preferredstatusbarupdateanimation"},{"type":"property","title":"var screen: ScreenType","path":"\/documentation\/workflowui\/workflowhostingcontroller\/screen"},{"type":"property","title":"var supportedInterfaceOrientations: UIInterfaceOrientationMask","path":"\/documentation\/workflowui\/workflowhostingcontroller\/supportedinterfaceorientations"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func preferredContentSizeDidChange(forChildContentContainer: UIContentContainer)","path":"\/documentation\/workflowui\/workflowhostingcontroller\/preferredcontentsizedidchange(forchildcontentcontainer:)"},{"type":"method","title":"func update<W>(workflow: W)","path":"\/documentation\/workflowui\/workflowhostingcontroller\/update(workflow:)"},{"type":"method","title":"func viewDidLayoutSubviews()","path":"\/documentation\/workflowui\/workflowhostingcontroller\/viewdidlayoutsubviews()"},{"type":"method","title":"func viewDidLoad()","path":"\/documentation\/workflowui\/workflowhostingcontroller\/viewdidload()"},{"type":"method","title":"func viewWillLayoutSubviews()","path":"\/documentation\/workflowui\/workflowhostingcontroller\/viewwilllayoutsubviews()"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"WorkflowHostingController.CustomizeEnvironment","path":"\/documentation\/workflowui\/workflowhostingcontroller\/customizeenvironment-swift.typealias"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var primaryScreen: any Screen","type":"property","path":"\/documentation\/workflowui\/workflowhostingcontroller\/primaryscreen"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func findInnermostPrimaryScreen() -> any Screen","type":"method","path":"\/documentation\/workflowui\/workflowhostingcontroller\/findinnermostprimaryscreen()"}],"title":"SingleScreenContaining Implementations","path":"\/documentation\/workflowui\/workflowhostingcontroller\/singlescreencontaining-implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/workflowui\/workflowhostingcontroller\/apply(environment:)","title":"func apply(environment: ViewEnvironment)","type":"method"},{"path":"\/documentation\/workflowui\/workflowhostingcontroller\/customize(environment:)","title":"func customize(environment: inout ViewEnvironment)","type":"method"},{"path":"\/documentation\/workflowui\/workflowhostingcontroller\/environmentdidchange()","title":"func environmentDidChange()","type":"method"}],"title":"ViewEnvironmentObserving Implementations","path":"\/documentation\/workflowui\/workflowhostingcontroller\/viewenvironmentobserving-implementations"}]},{"title":"WorkflowUIViewController","path":"\/documentation\/workflowui\/workflowuiviewcontroller","type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/workflowui\/workflowuiviewcontroller\/hasviewappeared","title":"var hasViewAppeared: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/workflowui\/workflowuiviewcontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)"},{"type":"method","path":"\/documentation\/workflowui\/workflowuiviewcontroller\/viewdiddisappear(_:)","title":"func viewDidDisappear(Bool)"},{"type":"method","path":"\/documentation\/workflowui\/workflowuiviewcontroller\/viewdidlayoutsubviews()","title":"func viewDidLayoutSubviews()"},{"type":"method","path":"\/documentation\/workflowui\/workflowuiviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)"},{"type":"method","path":"\/documentation\/workflowui\/workflowuiviewcontroller\/viewwilldisappear(_:)","title":"func viewWillDisappear(Bool)"},{"type":"method","path":"\/documentation\/workflowui\/workflowuiviewcontroller\/viewwilllayoutsubviews()","title":"func viewWillLayoutSubviews()"}]},{"title":"Protocols","type":"groupMarker"},{"title":"Screen","path":"\/documentation\/workflowui\/screen","type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func adaptedEnvironment(adapting: (inout ViewEnvironment) -> Void) -> AdaptedEnvironmentScreen<Self>","path":"\/documentation\/workflowui\/screen\/adaptedenvironment(adapting:)","type":"method"},{"title":"func adaptedEnvironment<Key>(key: Key.Type, value: Key.Value) -> AdaptedEnvironmentScreen<Self>","path":"\/documentation\/workflowui\/screen\/adaptedenvironment(key:value:)","type":"method"},{"title":"func adaptedEnvironment<Value>(keyPath: WritableKeyPath<ViewEnvironment, Value>, value: Value) -> AdaptedEnvironmentScreen<Self>","path":"\/documentation\/workflowui\/screen\/adaptedenvironment(keypath:value:)","type":"method"},{"title":"func asAnyScreen() -> AnyScreen","path":"\/documentation\/workflowui\/screen\/asanyscreen()","type":"method"},{"title":"func buildViewController(in: ViewEnvironment) -> UIViewController","path":"\/documentation\/workflowui\/screen\/buildviewcontroller(in:)","type":"method"},{"title":"func canUpdate(viewController: UIViewController, with: ViewEnvironment) -> Bool","path":"\/documentation\/workflowui\/screen\/canupdate(viewcontroller:with:)","type":"method"},{"title":"func update(viewController: UIViewController, with: ViewEnvironment)","path":"\/documentation\/workflowui\/screen\/update(viewcontroller:with:)","type":"method"},{"title":"func viewControllerDescription(environment: ViewEnvironment) -> ViewControllerDescription","path":"\/documentation\/workflowui\/screen\/viewcontrollerdescription(environment:)","type":"method"}]},{"title":"SingleScreenContaining","path":"\/documentation\/workflowui\/singlescreencontaining","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/workflowui\/singlescreencontaining\/primaryscreen","title":"var primaryScreen: any Screen"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/workflowui\/singlescreencontaining\/findinnermostprimaryscreen()","title":"func findInnermostPrimaryScreen() -> any Screen"}]},{"title":"UpdateChildScreenViewController","path":"\/documentation\/workflowui\/updatechildscreenviewcontroller","type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/workflowui\/updatechildscreenviewcontroller\/update(child:with:in:onchange:)","title":"func update<VC>(child: ReferenceWritableKeyPath<Self, VC>, with: some Screen, in: ViewEnvironment, onChange: (VC) -> Void)"}]},{"title":"ViewEnvironmentKey","path":"\/documentation\/workflowui\/viewenvironmentkey","type":"protocol","children":[{"type":"groupMarker","title":"Associated Types"},{"path":"\/documentation\/workflowui\/viewenvironmentkey\/value","type":"associatedtype","title":"Value"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/workflowui\/viewenvironmentkey\/defaultvalue","type":"property","title":"static var defaultValue: Self.Value"}]},{"title":"ViewEnvironmentObserving","path":"\/documentation\/workflowui\/viewenvironmentobserving","type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/workflowui\/viewenvironmentobserving\/apply(environment:)","type":"method","children":[{"title":"ViewEnvironmentObserving Implementations","children":[{"title":"func apply(environment: ViewEnvironment)","path":"\/documentation\/workflowui\/viewenvironmentobserving\/apply(environment:)-1kxzy","type":"method"}],"type":"groupMarker"}],"title":"func apply(environment: ViewEnvironment)"},{"path":"\/documentation\/workflowui\/viewenvironmentobserving\/applyenvironmentifneeded()","type":"method","title":"func applyEnvironmentIfNeeded()"},{"path":"\/documentation\/workflowui\/viewenvironmentobserving\/customize(environment:)","type":"method","children":[{"children":[{"type":"method","title":"func customize(environment: inout ViewEnvironment)","path":"\/documentation\/workflowui\/viewenvironmentobserving\/customize(environment:)-3dllr"}],"title":"ViewEnvironmentObserving Implementations","type":"groupMarker"}],"title":"func customize(environment: inout ViewEnvironment)"},{"path":"\/documentation\/workflowui\/viewenvironmentobserving\/environmentdidchange()","type":"method","children":[{"type":"groupMarker","title":"ViewEnvironmentObserving Implementations","children":[{"title":"func environmentDidChange()","path":"\/documentation\/workflowui\/viewenvironmentobserving\/environmentdidchange()-18stf","type":"method"}]}],"title":"func environmentDidChange()"}]},{"title":"ViewEnvironmentPropagating","path":"\/documentation\/workflowui\/viewenvironmentpropagating","type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var environment: ViewEnvironment","path":"\/documentation\/workflowui\/viewenvironmentpropagating\/environment"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func applyEnvironmentIfNeeded()","path":"\/documentation\/workflowui\/viewenvironmentpropagating\/applyenvironmentifneeded()"},{"type":"method","children":[{"children":[{"title":"func setNeedsEnvironmentUpdate()","path":"\/documentation\/workflowui\/viewenvironmentpropagating\/setneedsenvironmentupdate()-1oxbn","type":"method"}],"title":"ViewEnvironmentPropagating Implementations","type":"groupMarker"}],"title":"func setNeedsEnvironmentUpdate()","path":"\/documentation\/workflowui\/viewenvironmentpropagating\/setneedsenvironmentupdate()"}]},{"title":"Structures","type":"groupMarker"},{"title":"AdaptedEnvironmentScreen","path":"\/documentation\/workflowui\/adaptedenvironmentscreen","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(wrapping: Content, adapting: Adapter)","path":"\/documentation\/workflowui\/adaptedenvironmentscreen\/init(wrapping:adapting:)"},{"type":"init","title":"init<Key>(wrapping: Content, key: Key.Type, value: Key.Value)","path":"\/documentation\/workflowui\/adaptedenvironmentscreen\/init(wrapping:key:value:)"},{"type":"init","title":"init<Value>(wrapping: Content, keyPath: WritableKeyPath<ViewEnvironment, Value>, value: Value)","path":"\/documentation\/workflowui\/adaptedenvironmentscreen\/init(wrapping:keypath:value:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var wrapped: Content","path":"\/documentation\/workflowui\/adaptedenvironmentscreen\/wrapped"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"AdaptedEnvironmentScreen.Adapter","path":"\/documentation\/workflowui\/adaptedenvironmentscreen\/adapter"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func adaptedEnvironment(adapting: (inout ViewEnvironment) -> Void) -> AdaptedEnvironmentScreen<Self>","path":"\/documentation\/workflowui\/adaptedenvironmentscreen\/adaptedenvironment(adapting:)","type":"method"},{"title":"func adaptedEnvironment<Key>(key: Key.Type, value: Key.Value) -> AdaptedEnvironmentScreen<Self>","path":"\/documentation\/workflowui\/adaptedenvironmentscreen\/adaptedenvironment(key:value:)","type":"method"},{"title":"func adaptedEnvironment<Value>(keyPath: WritableKeyPath<ViewEnvironment, Value>, value: Value) -> AdaptedEnvironmentScreen<Self>","path":"\/documentation\/workflowui\/adaptedenvironmentscreen\/adaptedenvironment(keypath:value:)","type":"method"},{"title":"func asAnyScreen() -> AnyScreen","path":"\/documentation\/workflowui\/adaptedenvironmentscreen\/asanyscreen()","type":"method"},{"title":"func buildViewController(in: ViewEnvironment) -> UIViewController","path":"\/documentation\/workflowui\/adaptedenvironmentscreen\/buildviewcontroller(in:)","type":"method"},{"title":"func canUpdate(viewController: UIViewController, with: ViewEnvironment) -> Bool","path":"\/documentation\/workflowui\/adaptedenvironmentscreen\/canupdate(viewcontroller:with:)","type":"method"},{"title":"func update(viewController: UIViewController, with: ViewEnvironment)","path":"\/documentation\/workflowui\/adaptedenvironmentscreen\/update(viewcontroller:with:)","type":"method"},{"title":"func viewControllerDescription(environment: ViewEnvironment) -> ViewControllerDescription","path":"\/documentation\/workflowui\/adaptedenvironmentscreen\/viewcontrollerdescription(environment:)","type":"method"}],"type":"symbol","title":"Screen Implementations","path":"\/documentation\/workflowui\/adaptedenvironmentscreen\/screen-implementations"}]},{"title":"AnyScreen","path":"\/documentation\/workflowui\/anyscreen","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/workflowui\/anyscreen\/init(_:)","title":"init(some Screen)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/workflowui\/anyscreen\/wrappedscreen","title":"let wrappedScreen: Screen"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/workflowui\/anyscreen\/viewcontrollerdescription(environment:)","title":"func viewControllerDescription(environment: ViewEnvironment) -> ViewControllerDescription"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func adaptedEnvironment(adapting: (inout ViewEnvironment) -> Void) -> AdaptedEnvironmentScreen<Self>","type":"method","path":"\/documentation\/workflowui\/anyscreen\/adaptedenvironment(adapting:)"},{"title":"func adaptedEnvironment<Key>(key: Key.Type, value: Key.Value) -> AdaptedEnvironmentScreen<Self>","type":"method","path":"\/documentation\/workflowui\/anyscreen\/adaptedenvironment(key:value:)"},{"title":"func adaptedEnvironment<Value>(keyPath: WritableKeyPath<ViewEnvironment, Value>, value: Value) -> AdaptedEnvironmentScreen<Self>","type":"method","path":"\/documentation\/workflowui\/anyscreen\/adaptedenvironment(keypath:value:)"},{"title":"func asAnyScreen() -> AnyScreen","type":"method","path":"\/documentation\/workflowui\/anyscreen\/asanyscreen()"},{"title":"func buildViewController(in: ViewEnvironment) -> UIViewController","type":"method","path":"\/documentation\/workflowui\/anyscreen\/buildviewcontroller(in:)"},{"title":"func canUpdate(viewController: UIViewController, with: ViewEnvironment) -> Bool","type":"method","path":"\/documentation\/workflowui\/anyscreen\/canupdate(viewcontroller:with:)"},{"title":"func update(viewController: UIViewController, with: ViewEnvironment)","type":"method","path":"\/documentation\/workflowui\/anyscreen\/update(viewcontroller:with:)"}],"path":"\/documentation\/workflowui\/anyscreen\/screen-implementations","title":"Screen Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var primaryScreen: any Screen","path":"\/documentation\/workflowui\/anyscreen\/primaryscreen"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func findInnermostPrimaryScreen() -> any Screen","path":"\/documentation\/workflowui\/anyscreen\/findinnermostprimaryscreen()"}],"path":"\/documentation\/workflowui\/anyscreen\/singlescreencontaining-implementations","title":"SingleScreenContaining Implementations"}]},{"title":"ViewControllerDescription","path":"\/documentation\/workflowui\/viewcontrollerdescription","type":"struct","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/workflowui\/viewcontrollerdescription\/kindidentifier","type":"struct","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/workflowui\/viewcontrollerdescription\/kindidentifier\/==(_:_:)","type":"op","title":"static func == (`Self`, `Self`) -> Bool"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/workflowui\/viewcontrollerdescription\/kindidentifier\/init(_:)","type":"init","title":"init<VC>(VC.Type)"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/workflowui\/viewcontrollerdescription\/kindidentifier\/canupdate(viewcontroller:)","type":"method","title":"func canUpdate(viewController: UIViewController) -> Bool"},{"path":"\/documentation\/workflowui\/viewcontrollerdescription\/kindidentifier\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/workflowui\/viewcontrollerdescription\/kindidentifier\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/workflowui\/viewcontrollerdescription\/kindidentifier\/!=(_:_:)","type":"op"}]}],"title":"ViewControllerDescription.KindIdentifier"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/workflowui\/viewcontrollerdescription\/init(performinitialupdate:dynamictype:environment:build:update:)","type":"init","title":"init(performInitialUpdate: Bool, dynamicType: UIViewController.Type, environment: ViewEnvironment, build: () -> UIViewController, update: (UIViewController) -> Void)"},{"path":"\/documentation\/workflowui\/viewcontrollerdescription\/init(performinitialupdate:type:environment:build:update:)","type":"init","title":"init<VC>(performInitialUpdate: Bool, type: VC.Type, environment: ViewEnvironment, build: () -> VC, update: (VC) -> Void)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/workflowui\/viewcontrollerdescription\/kind","type":"property","title":"let kind: KindIdentifier"},{"path":"\/documentation\/workflowui\/viewcontrollerdescription\/performinitialupdate","type":"property","title":"var performInitialUpdate: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/workflowui\/viewcontrollerdescription\/buildviewcontroller()","type":"method","title":"func buildViewController() -> UIViewController"},{"path":"\/documentation\/workflowui\/viewcontrollerdescription\/canupdate(viewcontroller:)","type":"method","title":"func canUpdate(viewController: UIViewController) -> Bool"},{"path":"\/documentation\/workflowui\/viewcontrollerdescription\/update(viewcontroller:)","type":"method","title":"func update(viewController: UIViewController)"}]},{"title":"ViewEnvironment","path":"\/documentation\/workflowui\/viewenvironment","type":"struct","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func setting<Key>(key: Key.Type, to: Key.Value) -> ViewEnvironment","path":"\/documentation\/workflowui\/viewenvironment\/setting(key:to:)","type":"method"},{"title":"func setting<Value>(keyPath: WritableKeyPath<ViewEnvironment, Value>, to: Value) -> ViewEnvironment","path":"\/documentation\/workflowui\/viewenvironment\/setting(keypath:to:)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript<Key>(Key.Type) -> Key.Value","path":"\/documentation\/workflowui\/viewenvironment\/subscript(_:)","type":"subscript"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let empty: ViewEnvironment","path":"\/documentation\/workflowui\/viewenvironment\/empty","type":"property"}]},{"title":"Type Aliases","type":"groupMarker"},{"title":"ViewEnvironmentCustomization","path":"\/documentation\/workflowui\/viewenvironmentcustomization","type":"typealias"},{"title":"ViewEnvironmentUpdateObservation","path":"\/documentation\/workflowui\/viewenvironmentupdateobservation","type":"typealias"},{"title":"Extended Modules","type":"groupMarker"},{"title":"SwiftUICore","path":"\/documentation\/workflowui\/swiftuicore","type":"extension","children":[{"type":"groupMarker","title":"Extended Structures"},{"path":"\/documentation\/workflowui\/swiftuicore\/environment","type":"extension","title":"Environment","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/workflowui\/swiftuicore\/environment\/init(_:)","title":"init(KeyPath<EnvironmentValues, Value>)"}]},{"path":"\/documentation\/workflowui\/swiftuicore\/environmentvalues","type":"extension","title":"EnvironmentValues","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/workflowui\/swiftuicore\/environmentvalues\/viewenvironment","type":"property","title":"var viewEnvironment: ViewEnvironment"}]}]},{"title":"UIKit","path":"\/documentation\/workflowui\/uikit","type":"extension","children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var environment: ViewEnvironment","path":"\/documentation\/workflowui\/uikit\/uiview\/environment","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func applyEnvironmentIfNeeded()","path":"\/documentation\/workflowui\/uikit\/uiview\/applyenvironmentifneeded()","type":"method"},{"title":"func setNeedsEnvironmentUpdate()","path":"\/documentation\/workflowui\/uikit\/uiview\/setneedsenvironmentupdate()","type":"method"}],"path":"\/documentation\/workflowui\/uikit\/uiview\/viewenvironmentpropagating-implementations","title":"ViewEnvironmentPropagating Implementations"}],"path":"\/documentation\/workflowui\/uikit\/uiview","title":"UIView","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/workflowui\/uikit\/uiviewcontroller\/updatechildscreenviewcontroller-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func update<VC>(child: ReferenceWritableKeyPath<Self, VC>, with: some Screen, in: ViewEnvironment, onChange: (VC) -> Void)","path":"\/documentation\/workflowui\/uikit\/uiviewcontroller\/update(child:with:in:onchange:)"}],"title":"UpdateChildScreenViewController Implementations","type":"symbol"},{"path":"\/documentation\/workflowui\/uikit\/uiviewcontroller\/viewenvironmentpropagating-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/workflowui\/uikit\/uiviewcontroller\/environment","type":"property","title":"var environment: ViewEnvironment"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/workflowui\/uikit\/uiviewcontroller\/applyenvironmentifneeded()","type":"method","title":"func applyEnvironmentIfNeeded()"},{"path":"\/documentation\/workflowui\/uikit\/uiviewcontroller\/setneedsenvironmentupdate()","type":"method","title":"func setNeedsEnvironmentUpdate()"}],"title":"ViewEnvironmentPropagating Implementations","type":"symbol"}],"path":"\/documentation\/workflowui\/uikit\/uiviewcontroller","title":"UIViewController","type":"extension"}]}],"path":"\/documentation\/workflowui"}],"type":"module","path":"\/documentation","title":"workflow-swift"}]}}