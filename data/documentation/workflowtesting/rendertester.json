{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WorkflowTesting\/documentation\/WorkflowTesting\/RenderTester"},"sections":[],"hierarchy":{"paths":[["doc:\/\/WorkflowTesting\/documentation\/WorkflowTesting"]]},"abstract":[{"type":"text","text":"Testing helper for validating the behavior of calls to "},{"type":"codeVoice","code":"render"},{"type":"text","text":"."}],"metadata":{"externalID":"s:15WorkflowTesting12RenderTesterV","modules":[{"name":"WorkflowTesting"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RenderTester"}],"symbolKind":"struct","roleHeading":"Structure","title":"RenderTester","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RenderTester"}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/WorkflowTesting\/documentation\/WorkflowTesting\/RenderTester\/expectSideEffect(key:file:line:)","doc:\/\/WorkflowTesting\/documentation\/WorkflowTesting\/RenderTester\/expectSideEffect(key:producingAction:file:line:)","doc:\/\/WorkflowTesting\/documentation\/WorkflowTesting\/RenderTester\/expectWorkflow(type:key:producingRendering:producingOutput:file:line:assertions:)","doc:\/\/WorkflowTesting\/documentation\/WorkflowTesting\/RenderTester\/expectWorkflowIgnoringOutput(type:key:producingRendering:file:line:assertions:)","doc:\/\/WorkflowTesting\/documentation\/WorkflowTesting\/RenderTester\/render(file:line:assertions:)"],"generated":true,"anchor":"Instance-Methods"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RenderTester"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"WorkflowType"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"WorkflowType"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:8WorkflowAAP","text":"Workflow"}]}]},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Usage: "},{"type":"codeVoice","code":"expect"},{"type":"text","text":" workflows and side effects then validate with a call to "},{"type":"codeVoice","code":"render"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"text","text":"the resulting "},{"type":"codeVoice","code":"RenderTesterResult"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Side-effects may be performed against the rendering to validate the behavior of actions."}],"type":"paragraph"},{"inlineContent":[{"text":"To directly test actions and their effects, use the ","type":"text"},{"type":"codeVoice","code":"WorkflowActionTester"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["workflow","    .renderTester(initialState: TestWorkflow.State())","    .expectWorker(","        TestWorker(),","        mockingOutput: TestWorker.Output.success","    )","    .expectWorkflow(","        type: ChildWorkflow.self,","        key: \"key\",","        rendering: \"rendering\",","        \/\/ ⚠️ N.B. Only one output per call to `render` may be produced,","        \/\/ even if multiple child Workflows are expected in a call","        \/\/ to `render`. This is an invariant enforced by `RenderTester`","        \/\/ and the real runtime.","        producingOutput: nil","    )","    .render { rendering in","        XCTAssertEqual(\"expected text on rendering\", rendering.text)","    }","    .assert(state: TestWorkflow.State())","    .assert(output: TestWorkflow.Output.finished)"],"type":"codeListing"},{"inlineContent":[{"text":"Validating the rendering only from the initial state provided by the workflow:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["workflow","    .renderTester()","    .render { rendering in","        XCTAssertEqual(\"expected text on rendering\", rendering.text)","    }"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Validate the state was updated from a callback on the rendering:"}],"type":"paragraph"},{"syntax":null,"code":["workflow","    .renderTester()","    .render { rendering in","        XCTAssertEqual(\"expected text on rendering\", rendering.text)","        rendering.updateText(\"updated\")","    }","    .assert(","        state: TestWorkflow.State(text: \"updated\")","    )"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Validate an output was received from the workflow. The "},{"type":"codeVoice","code":"action()"},{"type":"text","text":" on the rendering will cause an action that will return an output."}],"type":"paragraph"},{"code":["workflow","    .renderTester()","    .render { rendering in","        rendering.action()","    }","    .assert(","       output: .success","    )"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Validate a worker is running, and simulate the effect of its output:"}],"type":"paragraph"},{"code":["workflow","    .renderTester(initialState: TestWorkflow.State(loadingState: .loading))","    .expectWorker(","        TestWorker(),","        mockingOutput: TestWorker.Output.success","    )","    .render { _ in }"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Validate a child workflow is run, and simulate the effect of its output:"}],"type":"paragraph"},{"code":["workflow","    .renderTester(initialState: TestWorkflow.State(loadingState: .loading))","    .expectWorkflow(","        type: ChildWorkflow.self,","        rendering: \"rendering\",","        producingOutput: ChildWorkflow.Output.success","    )","    .render { _ in }"],"syntax":null,"type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/workflowtesting\/rendertester"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://WorkflowTesting/documentation/WorkflowTesting/RenderTester/expectSideEffect(key:producingAction:file:line:)":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expectSideEffect"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ActionType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s11AnyHashableV","text":"AnyHashable"},{"kind":"text","text":", "},{"kind":"externalParam","text":"producingAction"},{"text":": ","kind":"text"},{"text":"ActionType","preciseIdentifier":"s:15WorkflowTesting12RenderTesterV16expectSideEffect3key15producingAction4file4lineACyxGs11AnyHashableV_qd__s12StaticStringVSut0A4TypeQyd__Rsz0A00aJ0Rd__lF0jQ0L_qd__mfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"RenderTester","preciseIdentifier":"s:15WorkflowTesting12RenderTesterV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"WorkflowType","preciseIdentifier":"s:15WorkflowTesting12RenderTesterV0A4Typexmfp","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"expectSideEffect(key:producingAction:file:line:)","kind":"symbol","url":"\/documentation\/workflowtesting\/rendertester\/expectsideeffect(key:producingaction:file:line:)","identifier":"doc:\/\/WorkflowTesting\/documentation\/WorkflowTesting\/RenderTester\/expectSideEffect(key:producingAction:file:line:)","abstract":[{"text":"Expect a side-effect for the given key, and produce the given action when it is requested.","type":"text"}]},"doc://WorkflowTesting/documentation/WorkflowTesting/RenderTester/expectSideEffect(key:file:line:)":{"abstract":[{"text":"Expect a side-effect for the given key.","type":"text"}],"url":"\/documentation\/workflowtesting\/rendertester\/expectsideeffect(key:file:line:)","title":"expectSideEffect(key:file:line:)","identifier":"doc:\/\/WorkflowTesting\/documentation\/WorkflowTesting\/RenderTester\/expectSideEffect(key:file:line:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expectSideEffect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s11AnyHashableV","text":"AnyHashable"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowTesting12RenderTesterV","text":"RenderTester"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowTesting12RenderTesterV0A4Typexmfp","text":"WorkflowType"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://WorkflowTesting/documentation/WorkflowTesting/RenderTester/expectWorkflow(type:key:producingRendering:producingOutput:file:line:assertions:)":{"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/workflowtesting\/rendertester\/expectworkflow(type:key:producingrendering:producingoutput:file:line:assertions:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expectWorkflow","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ExpectedWorkflowType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ExpectedWorkflowType","preciseIdentifier":"s:15WorkflowTesting12RenderTesterV06expectA04type3key18producingRendering0H6Output4file4line10assertionsACyxGqd__m_SS0I0Qyd__0J0Qyd__Sgs12StaticStringVSuyqd__ct0A0ATRd__lF08ExpectedA4TypeL_qd__mfp","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"producingRendering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ExpectedWorkflowType","preciseIdentifier":"s:15WorkflowTesting12RenderTesterV06expectA04type3key18producingRendering0H6Output4file4line10assertionsACyxGqd__m_SS0I0Qyd__0J0Qyd__Sgs12StaticStringVSuyqd__ct0A0ATRd__lF08ExpectedA4TypeL_qd__mfp","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Rendering","preciseIdentifier":"s:8Workflow03AnyA11ConvertibleP9RenderingQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"producingOutput","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ExpectedWorkflowType","preciseIdentifier":"s:15WorkflowTesting12RenderTesterV06expectA04type3key18producingRendering0H6Output4file4line10assertionsACyxGqd__m_SS0I0Qyd__0J0Qyd__Sgs12StaticStringVSuyqd__ct0A0ATRd__lF08ExpectedA4TypeL_qd__mfp","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","preciseIdentifier":"s:8Workflow03AnyA11ConvertibleP6OutputQa","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"assertions","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ExpectedWorkflowType","preciseIdentifier":"s:15WorkflowTesting12RenderTesterV06expectA04type3key18producingRendering0H6Output4file4line10assertionsACyxGqd__m_SS0I0Qyd__0J0Qyd__Sgs12StaticStringVSuyqd__ct0A0ATRd__lF08ExpectedA4TypeL_qd__mfp","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"RenderTester","preciseIdentifier":"s:15WorkflowTesting12RenderTesterV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"WorkflowType","preciseIdentifier":"s:15WorkflowTesting12RenderTesterV0A4Typexmfp","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/WorkflowTesting\/documentation\/WorkflowTesting\/RenderTester\/expectWorkflow(type:key:producingRendering:producingOutput:file:line:assertions:)","title":"expectWorkflow(type:key:producingRendering:producingOutput:file:line:assertions:)","abstract":[{"text":"Expect the given workflow type in the next rendering.","type":"text"}]},"doc://WorkflowTesting/documentation/WorkflowTesting/RenderTester":{"navigatorTitle":[{"text":"RenderTester","kind":"identifier"}],"role":"symbol","url":"\/documentation\/workflowtesting\/rendertester","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RenderTester","kind":"identifier"}],"abstract":[{"text":"Testing helper for validating the behavior of calls to ","type":"text"},{"type":"codeVoice","code":"render"},{"text":".","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/WorkflowTesting\/documentation\/WorkflowTesting\/RenderTester","title":"RenderTester"},"doc://WorkflowTesting/documentation/WorkflowTesting":{"url":"\/documentation\/workflowtesting","kind":"symbol","type":"topic","title":"WorkflowTesting","role":"collection","identifier":"doc:\/\/WorkflowTesting\/documentation\/WorkflowTesting","abstract":[]},"doc://WorkflowTesting/documentation/WorkflowTesting/RenderTester/render(file:line:assertions:)":{"title":"render(file:line:assertions:)","abstract":[{"text":"Render the workflow under test. At this point, you should have set up all expectations.","type":"text"}],"url":"\/documentation\/workflowtesting\/rendertester\/render(file:line:assertions:)","type":"topic","identifier":"doc:\/\/WorkflowTesting\/documentation\/WorkflowTesting\/RenderTester\/render(file:line:assertions:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"render"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"assertions"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:15WorkflowTesting12RenderTesterV0A4Typexmfp","kind":"typeIdentifier","text":"WorkflowType"},{"kind":"text","text":"."},{"preciseIdentifier":"s:8Workflow03AnyA11ConvertibleP9RenderingQa","kind":"typeIdentifier","text":"Rendering"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15WorkflowTesting18RenderTesterResultV","kind":"typeIdentifier","text":"RenderTesterResult"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15WorkflowTesting12RenderTesterV0A4Typexmfp","kind":"typeIdentifier","text":"WorkflowType"},{"kind":"text","text":">"}],"role":"symbol"},"doc://WorkflowTesting/documentation/WorkflowTesting/RenderTester/expectWorkflowIgnoringOutput(type:key:producingRendering:file:line:assertions:)":{"role":"symbol","url":"\/documentation\/workflowtesting\/rendertester\/expectworkflowignoringoutput(type:key:producingrendering:file:line:assertions:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"expectWorkflowIgnoringOutput","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ExpectedWorkflowType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"type","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ExpectedWorkflowType","preciseIdentifier":"s:15WorkflowTesting12RenderTesterV06expectA14IgnoringOutput4type3key18producingRendering4file4line10assertionsACyxGqd__m_SS0K0Qyd__s12StaticStringVSuyqd__ct0A0APRd__lF08ExpectedA4TypeL_qd__mfp","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"producingRendering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ExpectedWorkflowType","preciseIdentifier":"s:15WorkflowTesting12RenderTesterV06expectA14IgnoringOutput4type3key18producingRendering4file4line10assertionsACyxGqd__m_SS0K0Qyd__s12StaticStringVSuyqd__ct0A0APRd__lF08ExpectedA4TypeL_qd__mfp","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Rendering","preciseIdentifier":"s:8Workflow03AnyA11ConvertibleP9RenderingQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"assertions","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ExpectedWorkflowType","preciseIdentifier":"s:15WorkflowTesting12RenderTesterV06expectA14IgnoringOutput4type3key18producingRendering4file4line10assertionsACyxGqd__m_SS0K0Qyd__s12StaticStringVSuyqd__ct0A0APRd__lF08ExpectedA4TypeL_qd__mfp","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"RenderTester","preciseIdentifier":"s:15WorkflowTesting12RenderTesterV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"WorkflowType","preciseIdentifier":"s:15WorkflowTesting12RenderTesterV0A4Typexmfp","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Expect the given workflow type in the next rendering, with its output being ignored by a call to "},{"type":"codeVoice","code":"ignoringOutput()"},{"text":".","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/WorkflowTesting\/documentation\/WorkflowTesting\/RenderTester\/expectWorkflowIgnoringOutput(type:key:producingRendering:file:line:assertions:)","title":"expectWorkflowIgnoringOutput(type:key:producingRendering:file:line:assertions:)"}}}