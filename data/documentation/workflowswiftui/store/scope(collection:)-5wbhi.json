{"abstract":[{"type":"text","text":"Derives a collection of stores from an "},{"type":"codeVoice","code":"IdentifiedArray"},{"type":"text","text":" of nested observable states."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/workflowswiftui\/store\/scope(collection:)-5wbhi"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Substate"},{"kind":"text","text":">("},{"kind":"externalParam","text":"collection"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15WorkflowSwiftUI5StoreC5Modelxmfp","kind":"typeIdentifier","text":"Model"},{"kind":"text","text":"."},{"preciseIdentifier":"s:15WorkflowSwiftUI15ObservableModelP5StateQa","kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV","kind":"typeIdentifier","text":"IdentifiedArray"},{"kind":"text","text":"<"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"preciseIdentifier":"s:15WorkflowSwiftUI5StoreC5scope10collectionAA01_D10CollectionVyAA13StateAccessorVyqd__GGs15WritableKeyPathCy0H0Qz21IdentifiedCollections0M5ArrayVyqd_0_qd__GG_tAA010ObservableH0Rd__SHRd_0_r0_lF8SubstateL_qd__mfp","kind":"typeIdentifier","text":"Substate"},{"kind":"text","text":">>) -> "},{"preciseIdentifier":"s:15WorkflowSwiftUI16_StoreCollectionV","kind":"typeIdentifier","text":"_StoreCollection"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15WorkflowSwiftUI13StateAccessorV","kind":"typeIdentifier","text":"StateAccessor"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15WorkflowSwiftUI5StoreC5scope10collectionAA01_D10CollectionVyAA13StateAccessorVyqd__GGs15WritableKeyPathCy0H0Qz21IdentifiedCollections0M5ArrayVyqd_0_qd__GG_tAA010ObservableH0Rd__SHRd_0_r0_lF8SubstateL_qd__mfp","kind":"typeIdentifier","text":"Substate"},{"kind":"text","text":">>"}],"symbolKind":"method","extendedModule":"WorkflowSwiftUI","externalID":"s:15WorkflowSwiftUI5StoreC5scope10collectionAA01_D10CollectionVyAA13StateAccessorVyqd__GGs15WritableKeyPathCy0H0Qz21IdentifiedCollections0M5ArrayVyqd_0_qd__GG_tAA010ObservableH0Rd__SHRd_0_r0_lF","modules":[{"name":"WorkflowSwiftUI"}],"title":"scope(collection:)","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Model"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableModel"},{"type":"text","text":"."}]}},"identifier":{"url":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/Store\/scope(collection:)-5wbhi","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI","doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/Store"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Substate"},{"kind":"text","text":">("},{"kind":"externalParam","text":"collection"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15WorkflowSwiftUI5StoreC5Modelxmfp","kind":"typeIdentifier","text":"Model"},{"kind":"text","text":"."},{"identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableModel\/State","preciseIdentifier":"s:15WorkflowSwiftUI15ObservableModelP5StateQa","kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV","kind":"typeIdentifier","text":"IdentifiedArray"},{"kind":"text","text":"<"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"preciseIdentifier":"s:15WorkflowSwiftUI5StoreC5scope10collectionAA01_D10CollectionVyAA13StateAccessorVyqd__GGs15WritableKeyPathCy0H0Qz21IdentifiedCollections0M5ArrayVyqd_0_qd__GG_tAA010ObservableH0Rd__SHRd_0_r0_lF8SubstateL_qd__mfp","kind":"typeIdentifier","text":"Substate"},{"kind":"text","text":">>) -> "},{"preciseIdentifier":"s:15WorkflowSwiftUI16_StoreCollectionV","kind":"typeIdentifier","text":"_StoreCollection"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/StateAccessor","preciseIdentifier":"s:15WorkflowSwiftUI13StateAccessorV","kind":"typeIdentifier","text":"StateAccessor"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15WorkflowSwiftUI5StoreC5scope10collectionAA01_D10CollectionVyAA13StateAccessorVyqd__GGs15WritableKeyPathCy0H0Qz21IdentifiedCollections0M5ArrayVyqd_0_qd__GG_tAA010ObservableH0Rd__SHRd_0_r0_lF8SubstateL_qd__mfp","kind":"typeIdentifier","text":"Substate"},{"kind":"text","text":">> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Substate"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableState","preciseIdentifier":"s:15WorkflowSwiftUI15ObservableStateP","kind":"typeIdentifier","text":"ObservableState"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"collection","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The keypath to the substate array"}]}]}]},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"code":"RandomAccessCollection","type":"codeVoice"},{"type":"text","text":" of stores"}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Stores in the returned collection keyed by ID, so swapping elements in the collection will"},{"type":"text","text":" "},{"type":"text","text":"not cause a mutation for views using child stores."}]}],"kind":"content"}],"references":{"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/ObservableState":{"url":"\/documentation\/workflowswiftui\/observablestate","role":"symbol","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableState","kind":"symbol","navigatorTitle":[{"text":"ObservableState","kind":"identifier"}],"type":"topic","title":"ObservableState","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"}]},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/Store/scope(collection:)-5wbhi":{"identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/Store\/scope(collection:)-5wbhi","conformance":{"constraints":[{"code":"Model","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ObservableModel","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Substate"},{"kind":"text","text":">("},{"kind":"externalParam","text":"collection"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowSwiftUI5StoreC5Modelxmfp","text":"Model"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowSwiftUI15ObservableModelP5StateQa","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV","text":"IdentifiedArray"},{"kind":"text","text":"<"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowSwiftUI5StoreC5scope10collectionAA01_D10CollectionVyAA13StateAccessorVyqd__GGs15WritableKeyPathCy0H0Qz21IdentifiedCollections0M5ArrayVyqd_0_qd__GG_tAA010ObservableH0Rd__SHRd_0_r0_lF8SubstateL_qd__mfp","text":"Substate"},{"kind":"text","text":">>) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowSwiftUI16_StoreCollectionV","text":"_StoreCollection"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowSwiftUI13StateAccessorV","text":"StateAccessor"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowSwiftUI5StoreC5scope10collectionAA01_D10CollectionVyAA13StateAccessorVyqd__GGs15WritableKeyPathCy0H0Qz21IdentifiedCollections0M5ArrayVyqd_0_qd__GG_tAA010ObservableH0Rd__SHRd_0_r0_lF8SubstateL_qd__mfp","text":"Substate"},{"kind":"text","text":">>"}],"url":"\/documentation\/workflowswiftui\/store\/scope(collection:)-5wbhi","kind":"symbol","abstract":[{"text":"Derives a collection of stores from an ","type":"text"},{"type":"codeVoice","code":"IdentifiedArray"},{"text":" of nested observable states.","type":"text"}],"title":"scope(collection:)","type":"topic","role":"symbol"},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/StateAccessor":{"title":"StateAccessor","abstract":[{"type":"text","text":"A wrapper around observable state that provides read and write access through unidirectional"},{"type":"text","text":" "},{"type":"text","text":"channels."}],"url":"\/documentation\/workflowswiftui\/stateaccessor","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateAccessor","kind":"identifier"}],"navigatorTitle":[{"text":"StateAccessor","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/StateAccessor"},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/Store":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"abstract":[{"type":"text","text":"Provides access to a workflow’s state and actions from within an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableScreen"},{"type":"text","text":"."}],"title":"Store","url":"\/documentation\/workflowswiftui\/store","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/Store","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Store","kind":"identifier"}]},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI":{"url":"\/documentation\/workflowswiftui","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI","title":"WorkflowSwiftUI","kind":"symbol","role":"collection","type":"topic","abstract":[]},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/ObservableScreen":{"type":"topic","abstract":[{"text":"A screen that renders SwiftUI views with an observable model for fine-grained invalidations.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableScreen","kind":"identifier"}],"role":"symbol","title":"ObservableScreen","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableScreen","navigatorTitle":[{"text":"ObservableScreen","kind":"identifier"}],"url":"\/documentation\/workflowswiftui\/observablescreen"},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/ObservableModel/State":{"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"ObservableState","preciseIdentifier":"s:15WorkflowSwiftUI15ObservableStateP","kind":"typeIdentifier"}],"url":"\/documentation\/workflowswiftui\/observablemodel\/state","title":"State","abstract":[{"text":"The associated state type that this model observes.","type":"text"}],"identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableModel\/State","required":true}}}