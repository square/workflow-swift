{"variants":[{"paths":["\/documentation\/workflowswiftui\/observable"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"A type that emits notifications to observers when underlying data changes.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI"]]},"relationshipsSections":[{"kind":"relationships","type":"conformingTypes","title":"Conforming Types","identifiers":["doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/Store"]}],"identifier":{"url":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/Observable","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Observable"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"Conforming to this protocol signals to other APIs that the type supports"},{"type":"text","text":" "},{"type":"text","text":"observation. However, applying the "},{"type":"codeVoice","code":"Observable"},{"type":"text","text":" protocol by itself to a"},{"type":"text","text":" "},{"type":"text","text":"type doesn’t add observation functionality to the type. Instead, always use"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Observation\/Observable()"},{"type":"text","text":" macro when adding observation"},{"type":"text","text":" "},{"type":"text","text":"support to a type."}],"type":"paragraph"}]}],"sections":[],"kind":"symbol","metadata":{"title":"Observable","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Observable","kind":"identifier"}],"roleHeading":"Protocol","platforms":[{"name":"iOS","unavailable":false,"introducedAt":"17.0","beta":false,"deprecated":false},{"name":"iPadOS","unavailable":false,"introducedAt":"17.0","beta":false,"deprecated":false},{"name":"Mac Catalyst","unavailable":false,"introducedAt":"17.0","beta":false,"deprecated":false},{"name":"macOS","unavailable":false,"introducedAt":"14.0","beta":false,"deprecated":false},{"name":"tvOS","unavailable":false,"introducedAt":"17.0","beta":false,"deprecated":false},{"name":"watchOS","unavailable":false,"introducedAt":"10.0","beta":false,"deprecated":false}],"symbolKind":"protocol","navigatorTitle":[{"text":"Observable","kind":"identifier"}],"modules":[{"name":"WorkflowSwiftUI"}],"externalID":"s:11Observation10ObservableP"},"references":{"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/Store":{"title":"Store","url":"\/documentation\/workflowswiftui\/store","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/Store","abstract":[{"type":"text","text":"Provides access to a workflow’s state and actions from within an "},{"type":"reference","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableScreen","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"Store"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Model"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableModel"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic"},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/ObservableScreen":{"type":"topic","abstract":[{"text":"A screen that renders SwiftUI views with an observable model for fine-grained invalidations.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableScreen","kind":"identifier"}],"role":"symbol","title":"ObservableScreen","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableScreen","navigatorTitle":[{"text":"ObservableScreen","kind":"identifier"}],"url":"\/documentation\/workflowswiftui\/observablescreen"},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI":{"url":"\/documentation\/workflowswiftui","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI","title":"WorkflowSwiftUI","kind":"symbol","role":"collection","type":"topic","abstract":[]},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/Observable":{"abstract":[{"type":"text","text":"A type that emits notifications to observers when underlying data changes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Observable"}],"title":"Observable","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/Observable","navigatorTitle":[{"kind":"identifier","text":"Observable"}],"url":"\/documentation\/workflowswiftui\/observable"}}}