{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/StateAccessor"},"metadata":{"symbolKind":"struct","role":"symbol","modules":[{"name":"WorkflowSwiftUI"}],"title":"StateAccessor","roleHeading":"Structure","externalID":"s:15WorkflowSwiftUI13StateAccessorV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateAccessor"}],"navigatorTitle":[{"kind":"identifier","text":"StateAccessor"}]},"abstract":[{"type":"text","text":"A wrapper around observable state that provides read and write access through unidirectional"},{"type":"text","text":" "},{"type":"text","text":"channels."}],"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/StateAccessor\/init(state:sendValue:)"],"anchor":"Initializers"},{"title":"Type Methods","generated":true,"identifiers":["doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/StateAccessor\/constant(state:)"],"anchor":"Type-Methods"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/StateAccessor\/Identifiable-Implementations","doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/StateAccessor\/ObservableModel-Implementations"],"anchor":"Default-Implementations"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateAccessor"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableState","kind":"typeIdentifier","text":"ObservableState","preciseIdentifier":"s:15WorkflowSwiftUI15ObservableStateP"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"This type serves as the primary channel of information in an "},{"type":"reference","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableModel","isActive":true},{"type":"text","text":", by providing"},{"type":"text","text":" "},{"type":"text","text":"read and write access to state through separate mechanisms."}],"type":"paragraph"},{"inlineContent":[{"text":"To create an accessor, use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/Workflow\/RenderContext\/makeStateAccessor(state:)"},{"text":". State writes","type":"text"},{"text":" ","type":"text"},{"text":"will flow through a workflow’s state mutation sink.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This type can be embedded in an "},{"type":"reference","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableModel","isActive":true},{"type":"text","text":" or used directly, for trivial workflows with"},{"type":"text","text":" "},{"type":"text","text":"no custom actions."}]}],"kind":"content"}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableModel","doc:\/\/WorkflowSwiftUI\/s8CopyableP","doc:\/\/WorkflowSwiftUI\/s12IdentifiableP"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/workflowswiftui\/stateaccessor"]}],"hierarchy":{"paths":[["doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI"]]},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"references":{"doc://WorkflowSwiftUI/s12IdentifiableP":{"identifier":"doc:\/\/WorkflowSwiftUI\/s12IdentifiableP","type":"unresolvable","title":"Swift.Identifiable"},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/ObservableState":{"url":"\/documentation\/workflowswiftui\/observablestate","role":"symbol","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableState","kind":"symbol","navigatorTitle":[{"text":"ObservableState","kind":"identifier"}],"type":"topic","title":"ObservableState","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"}]},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/ObservableModel":{"title":"ObservableModel","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableModel"}],"identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableModel","navigatorTitle":[{"kind":"identifier","text":"ObservableModel"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ObservableState","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","abstract":[{"text":"A type that can be observed for fine-grained changes and accept updates.","type":"text"}],"url":"\/documentation\/workflowswiftui\/observablemodel"},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/StateAccessor":{"title":"StateAccessor","abstract":[{"type":"text","text":"A wrapper around observable state that provides read and write access through unidirectional"},{"type":"text","text":" "},{"type":"text","text":"channels."}],"url":"\/documentation\/workflowswiftui\/stateaccessor","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateAccessor","kind":"identifier"}],"navigatorTitle":[{"text":"StateAccessor","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/StateAccessor"},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/StateAccessor/init(state:sendValue:)":{"abstract":[{"text":"Creates a new state accessor.","type":"text"}],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"State","preciseIdentifier":"s:15WorkflowSwiftUI13StateAccessorV0D0xmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"sendValue","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","preciseIdentifier":"s:15WorkflowSwiftUI13StateAccessorV0D0xmfp","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","title":"init(state:sendValue:)","url":"\/documentation\/workflowswiftui\/stateaccessor\/init(state:sendvalue:)","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/StateAccessor\/init(state:sendValue:)","role":"symbol"},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI":{"url":"\/documentation\/workflowswiftui","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI","title":"WorkflowSwiftUI","kind":"symbol","role":"collection","type":"topic","abstract":[]},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/Workflow/RenderContext/makeStateAccessor(state:)":{"conformance":{"constraints":[{"code":"WorkflowType","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Workflow","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"WorkflowType.State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ObservableState","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"Creates a ","type":"text"},{"type":"reference","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/StateAccessor","isActive":true},{"text":" for this workflow’s state.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStateAccessor"},{"kind":"text","text":"("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WorkflowType","preciseIdentifier":"s:8Workflow13RenderContextC0A7SwiftUIAD15ObservableState0G0RpzrlE0A4Typexmfp"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:8WorkflowAAP5StateQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"StateAccessor","preciseIdentifier":"s:15WorkflowSwiftUI13StateAccessorV"},{"text":"<","kind":"text"},{"text":"WorkflowType","kind":"typeIdentifier","preciseIdentifier":"s:8Workflow13RenderContextC0A7SwiftUIAD15ObservableState0G0RpzrlE0A4Typexmfp"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:8WorkflowAAP5StateQa"},{"text":">","kind":"text"}],"identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/Workflow\/RenderContext\/makeStateAccessor(state:)","type":"topic","url":"\/documentation\/workflowswiftui\/workflow\/rendercontext\/makestateaccessor(state:)","title":"makeStateAccessor(state:)","role":"symbol","kind":"symbol"},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/StateAccessor/ObservableModel-Implementations":{"title":"ObservableModel Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/StateAccessor\/ObservableModel-Implementations","url":"\/documentation\/workflowswiftui\/stateaccessor\/observablemodel-implementations"},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/StateAccessor/constant(state:)":{"title":"constant(state:)","url":"\/documentation\/workflowswiftui\/stateaccessor\/constant(state:)","abstract":[{"type":"text","text":"Creates a static state accessor which ignores all sent values, suitable for static previews"},{"type":"text","text":" "},{"type":"text","text":"or testing."}],"identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/StateAccessor\/constant(state:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"constant","kind":"identifier"},{"text":"(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowSwiftUI13StateAccessorV0D0xmfp"},{"text":") -> ","kind":"text"},{"text":"StateAccessor","kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowSwiftUI13StateAccessorV"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowSwiftUI13StateAccessorV0D0xmfp"},{"text":">","kind":"text"}],"type":"topic","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableState"},{"text":".","type":"text"}]},"kind":"symbol"},"doc://WorkflowSwiftUI/s8CopyableP":{"identifier":"doc:\/\/WorkflowSwiftUI\/s8CopyableP","title":"Swift.Copyable","type":"unresolvable"},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/StateAccessor/Identifiable-Implementations":{"title":"Identifiable Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/StateAccessor\/Identifiable-Implementations","url":"\/documentation\/workflowswiftui\/stateaccessor\/identifiable-implementations"}}}