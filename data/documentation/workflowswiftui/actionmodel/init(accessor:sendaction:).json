{"abstract":[{"type":"text","text":"Creates a new ActionModel."}],"hierarchy":{"paths":[["doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI","doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ActionModel"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"accessor","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15WorkflowSwiftUI13StateAccessorV","text":"StateAccessor","kind":"typeIdentifier","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/StateAccessor"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15WorkflowSwiftUI11ActionModelV5Statexmfp","text":"State","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"sendAction","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:15WorkflowSwiftUI11ActionModelV0D0q_mfp","text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Rather than creating this model directly, you should usually use the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/Workflow\/RenderContext\/makeActionModel(state:)"},{"type":"text","text":" method to create an"},{"type":"text","text":" "},{"type":"text","text":"instance of this model. If you need a static model for testing or"},{"type":"text","text":" "},{"type":"text","text":"previews, you can use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ActionModel\/constant(state:)"},{"type":"text","text":" method."}]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/workflowswiftui\/actionmodel\/init(accessor:sendaction:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ActionModel\/init(accessor:sendAction:)"},"kind":"symbol","sections":[],"metadata":{"externalID":"s:15WorkflowSwiftUI11ActionModelV8accessor04sendD0ACyxq_GAA13StateAccessorVyxG_yq_ctcfc","modules":[{"name":"WorkflowSwiftUI"}],"roleHeading":"Initializer","title":"init(accessor:sendAction:)","symbolKind":"init","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"accessor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StateAccessor","kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowSwiftUI13StateAccessorV"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowSwiftUI11ActionModelV5Statexmfp"},{"text":">, ","kind":"text"},{"text":"sendAction","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowSwiftUI11ActionModelV0D0q_mfp"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}]},"references":{"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/ActionModel/constant(state:)":{"abstract":[{"type":"text","text":"Creates a static model which ignores all sent values, suitable for static previews"},{"type":"text","text":" "},{"type":"text","text":"or testing."}],"kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"constant","kind":"identifier"},{"text":"(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15WorkflowSwiftUI11ActionModelV5Statexmfp","text":"State","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:15WorkflowSwiftUI11ActionModelV","text":"ActionModel","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15WorkflowSwiftUI11ActionModelV5Statexmfp","text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:15WorkflowSwiftUI11ActionModelV0D0q_mfp","text":"Action","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"State"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableState"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"constant(state:)","url":"\/documentation\/workflowswiftui\/actionmodel\/constant(state:)","type":"topic","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ActionModel\/constant(state:)"},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI":{"url":"\/documentation\/workflowswiftui","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI","title":"WorkflowSwiftUI","kind":"symbol","role":"collection","type":"topic","abstract":[]},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/StateAccessor":{"title":"StateAccessor","abstract":[{"type":"text","text":"A wrapper around observable state that provides read and write access through unidirectional"},{"type":"text","text":" "},{"type":"text","text":"channels."}],"url":"\/documentation\/workflowswiftui\/stateaccessor","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateAccessor","kind":"identifier"}],"navigatorTitle":[{"text":"StateAccessor","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/StateAccessor"},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/Workflow/RenderContext/makeActionModel(state:)":{"conformance":{"constraints":[{"code":"WorkflowType","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Workflow","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"WorkflowType.State","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ObservableState","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"Creates an ","type":"text"},{"type":"reference","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ActionModel","isActive":true},{"text":" for this workflowâ€™s state and action.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeActionModel"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WorkflowType","preciseIdentifier":"s:8Workflow13RenderContextC0A7SwiftUIAD15ObservableState0G0RpzrlE0A4Typexmfp"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:8WorkflowAAP5StateQa"},{"text":") -> ","kind":"text"},{"text":"ActionModel","kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowSwiftUI11ActionModelV"},{"text":"<","kind":"text"},{"text":"WorkflowType","kind":"typeIdentifier","preciseIdentifier":"s:8Workflow13RenderContextC0A7SwiftUIAD15ObservableState0G0RpzrlE0A4Typexmfp"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:8WorkflowAAP5StateQa"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:8Workflow13RenderContextC0A7SwiftUIAD15ObservableState0G0RpzrlE15makeActionModel5stateAD0iJ0VyAGqd__GAG_t0A4TypeQyd__RszAA0aI0Rd__lF0I0L_qd__mfp"},{"text":">","kind":"text"}],"identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/Workflow\/RenderContext\/makeActionModel(state:)","type":"topic","url":"\/documentation\/workflowswiftui\/workflow\/rendercontext\/makeactionmodel(state:)","title":"makeActionModel(state:)","role":"symbol","kind":"symbol"},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/ActionModel":{"kind":"symbol","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ActionModel","role":"symbol","navigatorTitle":[{"text":"ActionModel","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ActionModel","kind":"identifier"}],"abstract":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableModel"},{"text":" for workflows with a single action.","type":"text"}],"type":"topic","title":"ActionModel","url":"\/documentation\/workflowswiftui\/actionmodel"},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/ActionModel/init(accessor:sendAction:)":{"identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ActionModel\/init(accessor:sendAction:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"accessor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowSwiftUI13StateAccessorV","text":"StateAccessor"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowSwiftUI11ActionModelV5Statexmfp","text":"State"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"sendAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15WorkflowSwiftUI11ActionModelV0D0q_mfp","text":"Action"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"kind":"symbol","title":"init(accessor:sendAction:)","url":"\/documentation\/workflowswiftui\/actionmodel\/init(accessor:sendaction:)","role":"symbol","type":"topic","abstract":[{"text":"Creates a new ActionModel.","type":"text"}]},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/ObservableModel":{"kind":"symbol","title":"ObservableModel","role":"symbol","abstract":[{"text":"A type that can be observed for fine-grained changes and accept updates.","type":"text"}],"navigatorTitle":[{"text":"ObservableModel","kind":"identifier"}],"identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableModel","url":"\/documentation\/workflowswiftui\/observablemodel","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableModel","kind":"identifier"}]}}}