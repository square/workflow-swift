{"identifier":{"url":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/Perceptible","interfaceLanguage":"swift"},"relationshipsSections":[{"title":"Inherited By","type":"inheritedBy","identifiers":["doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableState"],"kind":"relationships"},{"title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/Store"],"kind":"relationships"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Perceptible"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"name":"Important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"This is a back-port of Swift’s ","type":"text"},{"type":"codeVoice","code":"Observable"},{"text":" protocol.","type":"text"}]}],"style":"important"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conforming to this protocol signals to other APIs that the type supports"},{"type":"text","text":" "},{"type":"text","text":"perception. However, applying the "},{"type":"codeVoice","code":"Perceptible"},{"type":"text","text":" protocol by itself to a"},{"type":"text","text":" "},{"type":"text","text":"type doesn’t add perception functionality to the type. Instead, always use"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Perception\/Perceptible()"},{"type":"text","text":" macro when adding perception"},{"type":"text","text":" "},{"type":"text","text":"support to a type."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI"]]},"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"Perceptible"}],"platforms":[{"deprecated":false,"name":"iOS","renamed":"Observable","deprecatedAt":"26.0","beta":false,"unavailable":false},{"deprecated":false,"name":"iPadOS","renamed":"Observable","deprecatedAt":"26.0","beta":false,"unavailable":false},{"deprecated":false,"name":"Mac Catalyst","renamed":"Observable","deprecatedAt":"26.0","beta":false,"unavailable":false},{"deprecated":false,"name":"macOS","renamed":"Observable","deprecatedAt":"26.0","beta":false,"unavailable":false},{"deprecated":false,"name":"tvOS","renamed":"Observable","deprecatedAt":"26.0","beta":false,"unavailable":false},{"deprecated":false,"name":"watchOS","renamed":"Observable","deprecatedAt":"26.0","beta":false,"unavailable":false}],"title":"Perceptible","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Perceptible"}],"symbolKind":"protocol","externalID":"s:14PerceptionCore11PerceptibleP","role":"symbol","modules":[{"name":"WorkflowSwiftUI"}]},"sections":[],"variants":[{"paths":["\/documentation\/workflowswiftui\/perceptible"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"A type that emits notifications to perceivers when underlying data changes."}],"references":{"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI":{"url":"\/documentation\/workflowswiftui","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI","title":"WorkflowSwiftUI","kind":"symbol","role":"collection","type":"topic","abstract":[]},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/Perceptible":{"abstract":[{"type":"text","text":"A type that emits notifications to perceivers when underlying data changes."}],"navigatorTitle":[{"kind":"identifier","text":"Perceptible"}],"title":"Perceptible","url":"\/documentation\/workflowswiftui\/perceptible","type":"topic","deprecated":true,"identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/Perceptible","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Perceptible"}]},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/ObservableState":{"url":"\/documentation\/workflowswiftui\/observablestate","role":"symbol","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableState","kind":"symbol","navigatorTitle":[{"text":"ObservableState","kind":"identifier"}],"type":"topic","title":"ObservableState","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"}]},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/ObservableScreen":{"type":"topic","abstract":[{"text":"A screen that renders SwiftUI views with an observable model for fine-grained invalidations.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableScreen","kind":"identifier"}],"role":"symbol","title":"ObservableScreen","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableScreen","navigatorTitle":[{"text":"ObservableScreen","kind":"identifier"}],"url":"\/documentation\/workflowswiftui\/observablescreen"},"doc://WorkflowSwiftUI/documentation/WorkflowSwiftUI/Store":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"abstract":[{"type":"text","text":"Provides access to a workflow’s state and actions from within an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/ObservableScreen"},{"type":"text","text":"."}],"title":"Store","url":"\/documentation\/workflowswiftui\/store","identifier":"doc:\/\/WorkflowSwiftUI\/documentation\/WorkflowSwiftUI\/Store","role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Store","kind":"identifier"}]}}}