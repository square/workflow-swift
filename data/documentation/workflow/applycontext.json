{"hierarchy":{"paths":[["doc:\/\/Workflow\/documentation\/Workflow"]]},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/workflow\/applycontext"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Workflow"}],"symbolKind":"struct","externalID":"s:8Workflow12ApplyContextV","navigatorTitle":[{"kind":"identifier","text":"ApplyContext"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplyContext"}],"roleHeading":"Structure","role":"symbol","title":"ApplyContext"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplyContext","kind":"identifier"},{"text":"<","kind":"text"},{"text":"WorkflowType","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WorkflowType","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Workflow","kind":"typeIdentifier","identifier":"doc:\/\/Workflow\/documentation\/Workflow\/Workflow","preciseIdentifier":"s:8WorkflowAAP"}],"platforms":["iOS"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Read-only access to "},{"type":"codeVoice","code":"Workflow"},{"type":"text","text":" values is exposed via the "},{"type":"codeVoice","code":"subscript[workflowValue:]"},{"type":"text","text":" API,"},{"type":"text","text":" "},{"type":"text","text":"which accepts a read-only "},{"type":"codeVoice","code":"KeyPath"},{"type":"text","text":" to a "},{"type":"codeVoice","code":"Workflow"},{"type":"text","text":"’s value."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Usage example:"}],"type":"paragraph"},{"code":["    struct MyWorkflow: Workflow {","        let shouldSuppressOutput: Bool","","        \/\/ ... implementation ...","    }","","    enum MyAction: WorkflowAction {","        typealias WorkflowType = MyWorkflow","","        case one","        case two","","        func apply(toState state: inout WorkflowType.State, context: ApplyContext<WorkflowType>) -> WorkflowType.Output? {","            \/\/ Make conditional choices based on the `Workflow`'s instance values","            let shouldSuppressOutput = context[workflowValue: \\.shouldSuppressOutput]","            if shouldSuppressOutput { return nil }","","            \/\/ ... implementation ...","        }","    }"],"syntax":"swift","type":"codeListing"},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"text":"The instance of this type passed to the ","type":"text"},{"code":"apply()","type":"codeVoice"},{"text":" method should not escape from that method.","type":"text"},{"text":" ","type":"text"},{"text":"Attempting to access the instance after the ","type":"text"},{"code":"apply()","type":"codeVoice"},{"text":" method has returned is a client error and will crash.","type":"text"}]}],"type":"aside","name":"Warning"}]}],"abstract":[{"text":"Runtime context passed as a parameter to ","type":"text"},{"type":"codeVoice","code":"WorkflowAction"},{"text":"’s ","type":"text"},{"type":"codeVoice","code":"apply()"},{"text":" method","type":"text"},{"text":" ","type":"text"},{"text":"that provides an integration point with the runtime that can be used to read values from","type":"text"},{"text":" ","type":"text"},{"text":"the current ","type":"text"},{"type":"codeVoice","code":"Workflow"},{"text":" instance.","type":"text"}],"topicSections":[{"anchor":"Subscripts","title":"Subscripts","identifiers":["doc:\/\/Workflow\/documentation\/Workflow\/ApplyContext\/subscript(workflowValue:)"],"generated":true}],"identifier":{"url":"doc:\/\/Workflow\/documentation\/Workflow\/ApplyContext","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://Workflow/documentation/Workflow/ApplyContext/subscript(workflowValue:)":{"fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"workflowValue"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:8Workflow12ApplyContextV0A4Typexmfp","text":"WorkflowType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:8Workflow12ApplyContextV13workflowValueqd__s7KeyPathCyxqd__G_tcluip0E0L_qd__mfp","text":"Value"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:8Workflow12ApplyContextV13workflowValueqd__s7KeyPathCyxqd__G_tcluip0E0L_qd__mfp","text":"Value"}],"type":"topic","role":"symbol","abstract":[],"title":"subscript(workflowValue:)","identifier":"doc:\/\/Workflow\/documentation\/Workflow\/ApplyContext\/subscript(workflowValue:)","url":"\/documentation\/workflow\/applycontext\/subscript(workflowvalue:)","kind":"symbol"},"doc://Workflow/documentation/Workflow/Workflow":{"navigatorTitle":[{"text":"Workflow","kind":"identifier"}],"kind":"symbol","title":"Workflow","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Workflow","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines a node in the workflow tree."}],"type":"topic","identifier":"doc:\/\/Workflow\/documentation\/Workflow\/Workflow","url":"\/documentation\/workflow\/workflow","role":"symbol"},"doc://Workflow/documentation/Workflow":{"abstract":[],"identifier":"doc:\/\/Workflow\/documentation\/Workflow","type":"topic","title":"Workflow","kind":"symbol","role":"collection","url":"\/documentation\/workflow"},"doc://Workflow/documentation/Workflow/ApplyContext":{"identifier":"doc:\/\/Workflow\/documentation\/Workflow\/ApplyContext","url":"\/documentation\/workflow\/applycontext","kind":"symbol","type":"topic","title":"ApplyContext","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplyContext"}],"navigatorTitle":[{"kind":"identifier","text":"ApplyContext"}],"abstract":[{"text":"Runtime context passed as a parameter to ","type":"text"},{"code":"WorkflowAction","type":"codeVoice"},{"text":"’s ","type":"text"},{"code":"apply()","type":"codeVoice"},{"text":" method","type":"text"},{"text":" ","type":"text"},{"text":"that provides an integration point with the runtime that can be used to read values from","type":"text"},{"text":" ","type":"text"},{"text":"the current ","type":"text"},{"code":"Workflow","type":"codeVoice"},{"text":" instance.","type":"text"}]}}}